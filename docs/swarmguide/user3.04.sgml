<sect1 id="swarm.user.user3.04.sect1">
  <title>Random Library</title>

<sect2>
 <title>Major Random classes</title> 

    <formalpara><title>The Random library can be divided into</title><para>

        <itemizedlist>
          <listitem>
            <para>Generators</para></listitem>
          <listitem>
            <para>Distributions</para></listitem>
        </itemizedlist>
      </para>
    </formalpara>

    <formalpara><title>Calling initSwarm in main creates a default
        generator and distributions</title><para>
        <literallayout>
Generators
...
Distributions
...
Defobj
</literallayout>      
      </para>
    </formalpara>

</sect2>

<sect2>
 <title>Principle of using Random lib</title> 

<formalpara><title>To draw random numbers from a distribution you'll need</title>
      <para>
        <literallayout>
a generator instance. 

Must provide random seed - an integer number which primes the
generator a distribution instance

Generator
Distribution
a seed
random sequence of numbers
</literallayout>
      </para>
    </formalpara>

</sect2>

<sect2>
 <title>Default distributions (usage deprecated!!)</title> 

    <formalpara><title>When calling initSwarm in main, three default
        distributions are generated, fed by a default generator</title>
      <para> </para></formalpara>

    <formalpara><title>You can't control this generator's seed, but
        can give command line arg:</title><para> varySeed: New seed
        every time, Otherwise always same.

        <literallayout>MT19937
Generator
Uniform Integer
UniformUnsignedInteger 
UniformDouble
</literallayout>

      </para>
    </formalpara> 
</sect2>

<sect2>
 <title>Using the default distributions</title> 

    <formalpara><title>Default distributions are global </title><para>
      </para></formalpara>

    <formalpara><title>Can call any distribution from any agent </title><para>
      </para></formalpara>

    <formalpara><title>Could feed own distribution from
        generator</title><para> </para></formalpara>

<formalpara><title>For a double in interval [minVal,maxVal]:</title>

      <para><programlisting>
	[uniformDblRand getDoubleWithMin: minVal withMax: maxVal];
        </programlisting>
      </para>
    </formalpara>

    <formalpara><title>For an integer in interval [minVal,maxVal]:</title>
      <para>

        <programlisting>  
[uniformIntegerRand getDoubleWithMin: minVal withMax:maxVal];
        </programlisting>
      </para>
    </formalpara>
</sect2>

<sect2>
 <title>The Random Number Generators</title> 

    <formalpara><title>Computers can't create real random numbers</title>
      <para></para></formalpara>

    <formalpara><title>These generators represent a large number of
        studies of pseudo RN generation</title><para>
      </para></formalpara>

    <formalpara><title>Rule of thumb: Choose well tested generator
    which has a long period</title>
      <para>Generators in Swarm libs:

        <itemizedlist>
          <listitem><para>ACG</para></listitem>
          <listitem><para>C2LCGX</para></listitem>
          <listitem><para>C2MRG3</para></listitem>
          <listitem><para>C2TAUS</para></listitem>
          <listitem><para>C3MWC</para></listitem>
          <listitem><para>C4LCGX</para></listitem>
          <listitem><para>LCG</para></listitem>
          <listitem><para>MRG</para></listitem>
          <listitem><para>MT1993</para></listitem>
          <listitem><para>MWCA  </para></listitem>
          <listitem><para>MWCB  </para></listitem>
          <listitem><para>PMMLCG</para></listitem>
          <listitem><para>PSWB  </para></listitem>
          <listitem><para>RWC2  </para></listitem>
          <listitem><para>RWC8  </para></listitem>
          <listitem><para>SCG   </para></listitem>
          <listitem><para>SWB   </para></listitem>
          <listitem><para>TGFSR </para></listitem>
        </itemizedlist>
      </para>
    </formalpara>
</sect2>

<sect2>
 <title>The distributions</title> 

    <formalpara><title>All need setGenerator</title><para></para></formalpara>

    <formalpara><title>...and parameters:</title><para>

        <literallayout>
          For Bernoulli <literal>setProbability: p</literal>

          For Exponential <literal>setMean</literal>

          ForNormal/LogNormal <literal>setVariance, setMean</literal>

          For Gamma setAlpha, <literal>setBeta</literal>
</literallayout>
      </para>
    </formalpara>

<formalpara><title>Distributions</title><para>

        <itemizedlist>
          <listitem><para>BernoulliDist      </para></listitem>
          <listitem><para>ExponentialDist    </para></listitem>
          <listitem><para>GammaDist          </para></listitem>
          <listitem><para>LogNormalDist      </para></listitem>
          <listitem><para>NormalDist         </para></listitem>
          <listitem><para>RandomBitDist      </para></listitem>
          <listitem><para>UniformDoubleDist  </para></listitem>
          <listitem><para>UniformIntegerDist </para></listitem>
          <listitem><para>UniformUnsignedDist</para></listitem>
        </itemizedlist>

      </para>
    </formalpara> 
</sect2>
</sect1>
<!--
Local Variables:
sgml-parent-document:("userbook.sgml" "SECT1")
End:
-->
