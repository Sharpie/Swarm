<sect1 id="swarm.user.user2.05.sect1">
  <title>Building agents</title>

<sect2>
 <title>Step II: Building the agents</title> 

    <programlisting>- buildObjects 
{

 foodSpace = [FoodSpace createBegin: globalZone];
 [foodSpace setSizeX: worldXSize Y: worldYSize];
 foodSpace = [foodSpace createEnd];
 [foodSpace seedFoodWithProb: seedProb];

 aBug = [Bug createBegin: globalZone];
 [aBug setWorldSizeX: worldXSize Y: worldYSize];
 [aBug setFoodSpace: foodSpace];
 [aBug setX: xPos Y: yPos];
 aBug = [aBug createEnd];

 return self; 

}
</programlisting>

</sect2>

<sect2>
 <title>Details on the buildObjects phase</title> 

    <formalpara><title>The purpose of this method is to create each instance 
        of objects needed at the start of simulation, and then to pass parameters 
        to the objects</title><para></para></formalpara>

    <formalpara><title>It is good OOP protocol to provide setX: methods for each 
        parameter X we want to set, as in: [aBug setFoodSpace: foodSpace]</title><para>
      </para></formalpara> 

</sect2>

<sect2>
 <title>Why createBegin vs. create?</title> 

    <formalpara><title>Using createBegin:, createEnd is appropriate when we 
        want a reminder that the object needs to initialize something, 
        calculate or set (usually this code is put in the createEnd method).</title>
      <para></para></formalpara>

    <formalpara><title>Always use createBegin with createEnd to 
        avoid messy problems</title><para></para></formalpara>

    <formalpara><title>But create: is perfectly fine if we just want just to 
        create an object without further ado</title><para></para></formalpara> 

</sect2>
</sect1>
<!--
Local Variables:
sgml-parent-document:("userbook.sgml" "SECT1")
End:
-->
