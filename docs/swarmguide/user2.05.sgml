<SECT1 id="SWARM.USER.USER2.05.SECT1">
  <TITLE>Building agents</TITLE>

<SECT2>
 <TITLE>Step II: Building the agents</TITLE> 




<H2>-buildObjects {
</TITLE><PARA>
<BR></UL><UL>
<H2>  foodSpace = [FoodSpace createBegin: globalZone];
</TITLE><PARA>
</UL><UL>
<H2>  [foodSpace setSizeX: worldXSize Y: worldYSize];
</TITLE><PARA>
</UL><UL>
<H2>  foodSpace = [foodSpace createEnd];
</TITLE><PARA>
</UL><UL>
<H2>  [foodSpace seedFoodWithProb: seedProb];
</TITLE><PARA>
</UL><UL>
<H2>  
</TITLE><PARA>
</UL><UL>
<H2>  aBug = [Bug createBegin: globalZone];
</TITLE><PARA>
</UL><UL>
<H2>  [aBug setWorldSizeX: worldXSize Y: worldYSize];
</TITLE><PARA>
</UL><UL>
<H2>  [aBug setFoodSpace: foodSpace];
</TITLE><PARA>
</UL><UL>
<H2>  [aBug setX: xPos Y: yPos];
</TITLE><PARA>
</UL><UL>
<H2>  aBug = [aBug createEnd];
</TITLE><PARA>
</UL><UL>
<H2>  
</TITLE><PARA>
</UL><UL>
<H2>  return self; }</TITLE><PARA>
</PARA></FORMALPARA> 




</SECT2>

<SECT2>
 <TITLE>Details on the buildObjects phase</TITLE> 




<FORMALPARA><TITLE>The purpose of this method is to create each instance of objects needed at the start of simulation, and then to pass parameters to the objects
</TITLE><PARA>
</PARA></FORMALPARA>
<FORMALPARA><TITLE>It is good OOP protocol to provide setX: methods for each parameter X we want to set, as in: [aBug setFoodSpace: foodSpace]</TITLE><PARA>
</PARA></FORMALPARA> 




</SECT2>

<SECT2>
 <TITLE>Why createBegin vs. create?</TITLE> 




<FORMALPARA><TITLE>Using createBegin:, createEnd is appropriate when we want a reminder that the object needs to initialize something, calculate or set (usually this code is put in the createEnd method).
</TITLE><PARA>
</PARA></FORMALPARA>
<FORMALPARA><TITLE>Always use createBegin with createEnd to avoid messy problems
</TITLE><PARA>
</PARA></FORMALPARA>
<FORMALPARA><TITLE>But create: is perfectly fine if we just want just to create an object without further ado</TITLE><PARA>
</PARA></FORMALPARA> 




</SECT2>
</SECT1>
<!--
Local Variables:
sgml-parent-document:("userbook.sgml" "SECT1")
End:
-->
