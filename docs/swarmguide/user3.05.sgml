<sect1 id="swarm.user.user3.05.sect1">
  <title>Probes</title>

<sect2>
 <title>Major Probe classes</title> 

    <literallayout>Probe
ProbeMap
CompleteProbeMap
CompleteVarMap
CustomProbeMap
MessageProbe
VarProbe
ObjectBase
ProbeLibrary
</literallayout>

</sect2>

<sect2>
 <title>Using probes</title> 

    <formalpara><title>Two major uses for probes</title>
      <para>
        <itemizedlist>
          <listitem>
            <para>        To interface with an object</para> </listitem>
          <listitem>
            <para>        To create a GUI to an object</para></listitem>
        </itemizedlist>
      </para>
    </formalpara>

    <formalpara><title>Interface with an object of two types</title>
      <para>

        <literallayout>    
    VarProbe: 	   Probes an instance variable
    MessageProbe:    Probes a method
</literallayout>
      </para>
    </formalpara>

    <formalpara><title>GUI utilities:</title>
      <para>

        <literallayout>        ProbeMap: Collection of Var and MessageProbes
</literallayout>

      </para>
    </formalpara> 
</sect2>

<sect2>
 <title>Graphical probes to agents</title> 

    <formalpara><title>Check out instance of EmptyProbeMap </title>
      <para></para></formalpara>

    <formalpara><title>Attach VarProbe or MessageProbe to each
        variable or message to appear on GUI</title><para></para></formalpara>

    <formalpara><title>Put each probe on the EmptyProbeMap</title>
      <para></para></formalpara>

    <formalpara><title>ProbeDisplayManager  asked to create widget
      </title><para>

        <literallayout>
Agent
VarProbes
MessageProbe
ProbeMap
        </literallayout>
        
      </para>
    </formalpara> 
</sect2>

<sect2>
 <title>Code for previous example</title> 

    <programlisting>probeMap=[EmptyProbeMap createBegin: aZone];

[probeMap setProbedClass: [self class]];

probeMap=[probeMap createEnd];

[probeMap addProbe: [probeLibrary getProbeForVariable: "someVar"          

             inClass: [agent class]]];

				...

[probeMap addProbe: [probeLibrary getProbeForMessage: "someMessage" inClass: [agent class]] setHideResult: 1]];

[probeLibrary setProbeMap: probeMap For: [self class]];

[probeDisplayManager createProbeDisplayFor: modelSwarm];
</programlisting>

</sect2>

<sect2>
 <title>Other uses for probes</title> 


    <formalpara><title>Example of dynamic message calling where
        message is chosen at runtime: </title>
      <para>
        <programlisting>
theProbe = [MessageProbe createBegin: zone];
[theProbe setProbedSelector: theSelector];
theProbe = [theProbe createEnd];

anIndex = [aCollection begin: zone];
while ( (aMember = [anIndex next]) ) 
{
   theData = [theProbe doubleDynamicCallOn: aMember]];
   [self doSomething: theData];
}
[anIndex drop];
</programlisting>
      </para>
    </formalpara>

</sect2>
</sect1>
<!--
Local Variables:
sgml-parent-document:("userbook.sgml" "SECT1")
End:
-->
