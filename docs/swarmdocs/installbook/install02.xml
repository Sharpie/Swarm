<article id="SWARM.INSTALLBOOK.DISTRIB.ARTICLE">  <title>Overview of the Swarm Distribution</title>
      
  <simplesect>    <title>Libraries</title>

    <para>The main part of Swarm is a set of libraries, one per source
    directory. Briefly, the directory organization is as
    follows:</para>

    <formalpara><title>lib, include, bin</title><para>Installed
    libraries, include files, and helper binaries.</para></formalpara>

    <formalpara><title>src</title><para> Swarm library source
    files.</para></formalpara>

    <itemizedlist>
      <listitem><formalpara><title>defobj</title><para> Support
          of Swarm style Objective C programming</para></formalpara>
      </listitem>

      <listitem>        <formalpara><title>collections</title><para> Collection
          library -- various objects that "collect" other objects
          </para></formalpara>
      </listitem>
      
      <listitem>        <formalpara><title>activity</title><para>          Schedule execution mechanism -- the "process"</para></formalpara>
      </listitem>

      <listitem><formalpara><title>objectbase</title><para>          Base class for simulated objects -- the "agents"</para></formalpara>
      </listitem>

      <listitem><formalpara><title>space</title><para> Spatial
          environment library (currenly mostly 2D spaces are
          supported).</para></formalpara></listitem>

      <listitem><formalpara><title>random</title><para> Random
          number library.</para></formalpara>
      </listitem>

      <listitem><formalpara><title>simtools</title><para>          Collected tools (non-GUI) useful for developing Swarm
          simulations</para></formalpara>
      </listitem>

      <listitem><formalpara><title>simtoolsgui</title><para>          Further tools useful for interactive "GUI-oriented"
          simulations</para></formalpara>
      </listitem>
          
      <listitem><formalpara><title>gui</title><para> Graphical
          Interface library</para></formalpara>
      </listitem>

      <listitem><formalpara><title>analysis</title><para>          Objects that help with data processing</para></formalpara>
      </listitem>

    </itemizedlist>

  </simplesect>

  <simplesect>    <title>Sample applications</title>

    <para>In addition, there is a set of sample Swarm applications
      that are distributed separately.  Applications are the best
      current roadmap for the Swarm code: much of what is possible
      with Swarm is demonstrated in the sample applications.  The most
      important applications are:</para>

    <itemizedlist>      
      <listitem><formalpara><title>template</title>
          <para>Template simulation. The code itself here is trivial, but
            provides a nice base for new Swarm programmers to start
            from.</para>
        </formalpara>
      </listitem>

      <listitem><formalpara><title>tutorial</title> <para>A
          step-by-step tutorial to using Swarm.  The tutorial starts
          with a simple implementation of a cellular automaton in
          ordinary "C" and proceeds up to a full-blown GUI-oriented
          Swarm application in Swarm Objective C.</para>
        </formalpara>
      </listitem>
      
      <listitem><formalpara><title>heatbugs</title> <para>Heatbugs, our
            canonical, simple complex system. The code here is thoroughly
            commented for use as a guide to swarm programming.</para>
        </formalpara>
      </listitem>
      
      <listitem><formalpara><title>mousetrap</title> <para>Mousetrap is
            a discrete event simulation of a room full of mousetraps
            loaded with ping-pong balls.  The triggering of one of the
            traps sets off a chain reaction supposedly similar to fission.
            It is also thoroughly commented.</para>
        </formalpara>
      </listitem>
      
      <listitem><formalpara><title>market</title> <para>Market is an
            Objective-C wrapped piece of legacy code originally written in
            C.  It is a useful example of how to convert legacy code into
            Swarm; but, it is not very instructive on Swarm programming in
            general.</para>
        </formalpara>
      </listitem>
      
    </itemizedlist>

    </simplesect>

</article>
<!--
Local Variables:
sgml-parent-document:("installbook.xml" "article")
End: 
-->
