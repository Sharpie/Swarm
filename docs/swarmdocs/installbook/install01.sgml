<ARTICLE ID="SWARM.INSTALLBOOK.INSTALL.ARTICLE">
  <ARTHEADER>
    <TITLE>Installing Swarm</TITLE>
    
  </ARTHEADER>
  
  <SIDEBAR><PARA>Unless you are using a system with pre-built package
manager support (Debian GNU/Linux 2.0, Redhat 5.1, Solaris 2.5),
Windows 95 or Windows NT), installing Swarm will take some time:
various external libraries need to be acquired, compiled, and
installed, and then Swarm itself needs to be compiled.  Please report
any problems during installation back so that we can try to fix them
in the future. </PARA>
<PARA>If you are using a system with binary package manager support,
please read the manual appropriate to the manager.  Respectively, these
are `dpkg', `rpm', and `pkgadd', and 


    <PARA>Swarm uses quite a few libraries and is intended to run
      under all major flavors of Unix. This presents the unpleasant
      but largely unavoidable side-effect of making Swarm hard to
      install. Ideally, you should get the sys-admin for your site to
      do the job. In any event, the new online <EMPHASIS>Swarm
        FAQ</EMPHASIS> where we've tried to compile some of the common
      obstacles to installation, may be useful.
    </PARA>

    <ITEMIZEDLIST>
      <LISTITEM>
        <FORMALPARA><TITLE> <ULINK URL="http://valinux.pols.ukans.edu/~pauljohn/SwarmFaq.html">Online
              FAQ</ULINK></TITLE><PARA>Paul Johnson's active Swarm
            FAQ.  <EMPHASIS>Share your wisdom!</EMPHASIS></PARA></FORMALPARA>
      </LISTITEM>
    </ITEMIZEDLIST>
    
  </SIDEBAR>

  
  <SIMPLESECT>
    <TITLE>Supported Systems</TITLE> 

    <ITEMIZEDLIST>

      <LISTITEM>
        <FORMALPARA>
          <TITLE>Unix</TITLE>
          
          <PARA>Our intention is that Swarm will run on any modern
            Unix system. Ideally, Swarm itself should be 100%
            portable. Swarm is currently known to be running on SunOS
            4.1.3, Solaris, libc5- and glibc- based GNU/Linux systems,
            HPUX 9 and 11, IRIX 5.3 and 6.4, and MachTen/68k.  
            Significant potential obstacles to getting Swarm running
            on a new Unix platform are 1) poor support for GCC Objective C
            and 2) portability problems with libffi or ffcall.
            </PARA>
        </FORMALPARA>
      </LISTITEM>

      <LISTITEM>
        <FORMALPARA>
          <TITLE>Windows NT</TITLE>
          
          <PARA>We have also ported Swarm to work on Windows NT.  The
            following discussion largely pertains to installing Swarm
            under Linux/Unix systems.  In the case of Windows NT, the
            installation of the `Prerequisite Programs' is replaced by
            installing the Cygnus Win32 environment, and a Swarm
            "Install Shield" has been created to install Swarm on
            Windows NT (also replacing the job of installing the
            `Prerequisite Libraries').  Please see the Swarm <ULINK
            URL="http://www.santafe.edu/projects/swarm/release.html">release
            page</ULINK>, for more details.</PARA>

        </FORMALPARA>      
        
      </LISTITEM>

    </ITEMIZEDLIST>

    <PARA>See the <ULINK
        URL="http://www.santafe.edu/projects/swarm/platforms.html">Platform
        News</ULINK> web page for the most up-to-date
        information.</PARA>

  </SIMPLESECT>
  
  <SIMPLESECT>
    <TITLE>Prerequisite Programs</TITLE>
    
    <PARA>We assume you already have Unix and X Windows on your
      system: the rest of this software is freely available. Expect to
      spend some time compiling and installing these packages. URLs on
      this page are to the home distribution site: as a convenience,
      the Swarm ftp site <ULINK URL="ftp://ftp.santafe.edu/pub/swarm/needed-software/">ftp://ftp.santafe.edu/pub/swarm/</ULINK>
      contains copies of the necessary packages in <ULINK URL="ftp://ftp.santafe.edu/pub/swarm/needed-software/">needed-software/</ULINK>.
    </PARA>
    
    <PARA>
      <ITEMIZEDLIST>
        
        <LISTITEM>
          <FORMALPARA><TITLE>gcc 2.7.x / gcc 2.8.x / egcs 1.x</TITLE> 
            
            <PARA>gcc is the FSF's C, C++, and Objective C
              compiler. You need gcc 2.7.2 or greater installed on
              your system, including the Objective C support,
              libobjc.a.  The latest version is available from <ULINK URL="ftp://prep.ai.mit.edu/pub/gnu">ftp://ftp.gnu.org/pub/gnu/</ULINK>. Note:
              Swarm will not work with versions of gcc before
              2.7.2.</PARA>

          </FORMALPARA>
        </LISTITEM>
        
        <LISTITEM>
          
          <FORMALPARA><TITLE>GNU make</TITLE>
            
            <PARA>Make is used to automate building programs:
              every OS ships their own version of make with some
              random set of features. The Swarm makefiles
              currently use features that are not supported by all
              makes: GNU make is the only one guaranteed to
              work. Linux systems probably use GNU make
              already. The latest version of GNU make should be
              available on <ULINK URL="ftp://prep.ai.mit.edu/pub/gnu/">ftp://prep.ai.mit.edu/pub/gnu/</ULINK></PARA>
          </FORMALPARA></LISTITEM>

        <LISTITEM>
          <FORMALPARA><TITLE>gdb</TITLE>
            
            <PARA>gdb is the GNU debugger: Swarm doesn't require
              this, but you will probably want gdb on your system
              to

              <!-- <LINK LINKEND="SWARM.TECH.SGML.SECT1.DEBUG"></LINK> -->

              debug programs.  gdb is available on <ULINK URL="ftp://prep.ai.mit.edu/pub/gnu/">ftp://prep.ai.mit.edu/pub/gnu/</ULINK>.</PARA>
            
          </FORMALPARA>
        </LISTITEM>

      </ITEMIZEDLIST></PARA>
    
  </SIMPLESECT>
  
  <SIMPLESECT>
    <TITLE>Prerequisite Libraries</TITLE>
    
    
    <PARA>Swarm uses a variety of freely available software
      libraries. All of these libraries need to be configured and
      installed independently of Swarm.  When you configure Swarm itself,
      take a look at the output of "configure --help" to see what 
      "--with-*dir" options are available for locating the installations
      of these libraries.
      </PARA>

    <ITEMIZEDLIST>
      <LISTITEM>
        
        <FORMALPARA><TITLE>libXpm</TITLE> 

          <PARA>libXpm adds pixmap (coloured bitmap) support to
            X11. libXpm is a common X library, many systems already have
            it installed. A reasonably modern version is needed: we've
            used version 3.4f. If you get complaints about "Object"
            being multiply defined, your version of libXpm is too
            old. The library is available from <ULINK URL="ftp://ftp.x.org/contrib/libraries/xpm-3.4h.tar.gz">ftp://ftp.x.org/contrib/libraries/xpm-3.4h.tar.gz</ULINK>.</PARA>
        </FORMALPARA>
      </LISTITEM>

      <LISTITEM>
        <FORMALPARA><TITLE>Tcl/Tk</TITLE> 

          <PARA>More common libraries: a scripting language and a GUI
            toolkit. These libraries are available from <ULINK URL="ftp://ftp.scriptics.com/pub/tcl/">ftp://ftp.scriptics.com/pub/tcl/</ULINK>
            or from <ULINK URL="http://www.scriptics.com">http://www.scriptics.com</ULINK>.
            Swarm works with Tcl/Tk versions 7.4/4.0, 7.5/4.1, 7.6/4.2,
            and 8.0/8.0.  It may work with later versions, but it hasn't
            been tested.</PARA>
        </FORMALPARA>
      </LISTITEM>

      <LISTITEM>
          <FORMALPARA>
            <TITLE>BLT</TITLE>

            <PARA>BLT is an add-on to Tk that provides more
              widgets. BLT is available from <ULINK
                URL="ftp://ftp.tcltk.com/pub/blt/">ftp://ftp.tcltk.com/pub/blt</ULINK>.
              Note that BLT 2.3 works with either Tcl/Tk 7.5/4.1 or
              7.6/4.2, whereas BLT 2.1 only works with versions up to
              and including Tcl/Tk 7.5/4.1. Swarm works with <ULINK
                URL="ftp://ftp.santafe.edu/pub/swarm/needed-software/BLT2.4f.tar.gz">BLT-2.4f.tar.gz</ULINK>,
              or <ULINK
                URL="ftp://ftp.santafe.edu/pub/swarm/needed-software/blt8.0-unoff-swarm-0.tar.gz">blt8.0-unoff-swarm-0.tar.gz</ULINK>,
              available from the SFI ftp site. BLT 8.0 is preferred
              for use with Windows.
            </PARA>
          </FORMALPARA>
        </LISTITEM>
        
      <LISTITEM>
        <FORMALPARA>
            <TITLE>ffcall / libffi </TITLE> 
            
            <PARA>Either ffcall or libffi can be used in Swarm to
              provide the underlying support for message probing.
              Both libraries provide a portable, high level
              programming interface to various platform calling
              conventions. This allows a programmer to call any
              function specified by a call interface description at
              run time.  ffi stands for Foreign Function Interface. A
              foreign function interface is the popular name for the
              interface that allows code written in one language to
              call code written in another language.
            </PARA>
          </FORMALPARA>
          
          <PARA>The latest version of ffcall is
            <ULINK URL="ftp://ftp.santafe.edu/pub/gnu/ffcall-1.3.1.tar.gz">1.3.1</ULINK>
          </PARA>
          <PARA>The latest version of libffi is:
            <ULINK URL=
              "ftp://ftp.santafe.edu/pub/swarm/needed-software/libffi-1.18.tar.gz">1.18</ULINK>      
          </PARA>
        </LISTITEM>
        
        <LISTITEM>
          <FORMALPARA>
            <TITLE>libpng</TITLE> 
            <PARA>
              Swarm requires support for pixmap images - `png' 
              provides that support.
            </PARA>
          </FORMALPARA>
          <PARA>The current version is 
            <ULINK URL="ftp://swrinde.nde.swri.edu/pub/png/src/libpng-1.0.2.tar.gz">1.0.2</ULINK>.
          </PARA>
          <FORMALPARA>
            <TITLE>zlib</TITLE>
            <PARA>
              png requires data compression which zlib, a general data
              compression library, provides.
            </PARA>
          </FORMALPARA>
          <PARA>
            The current version is
            <ULINK URL="http://www.cdrom.com/pub/infozip/zlib">1.1.3</ULINK>
          </PARA>
        </LISTITEM>
      </ITEMIZEDLIST>
  </SIMPLESECT>
  
  <SIMPLESECT>
    <TITLE>Configuring and Installing Swarm</TITLE>
    
    <PARA>Once you have all of the above software installed, the next
      step is to configure Swarm. First unpack the Swarm .tar.gz file
      into a convenient place <LITERAL>(via gzip -dc swarm-xx.yy.zz.tar.gz
        | tar xf -)</LITERAL>.
    </PARA>

    <PARA>As of the Swarm 1.2 release, the compilation and
      installation of Swarm is handled by a GNU
      <COMMAND>configure</COMMAND> script.  This removes a large
      burden from the user, as <COMMAND>configure</COMMAND> has some
      intelligence which automatically sets many common options.
    </PARA>

    <PARA>You first need to read the file <FILENAME>INSTALL</FILENAME>
      with the release of Swarm, in the top-level source directory, to
      determine the appropriate and recent options to give to the
      <COMMAND>configure</COMMAND> script (this is analogous to what
      you needed to do when editing the *INCDIR macros in the obsolete
      <FILENAME>Makefile.conf</FILENAME> in earlier releases).
    </PARA>

  </SIMPLESECT>

  <SIMPLESECT>

    <TITLE>Compiling Swarm Libraries -- (not required for binary
      distributions)</TITLE> 

    <PARA>You've done the hard part, now type <COMMAND>make</COMMAND>,
      as in earlier releases from the top of the source directory, and
      watch the fun!  If running <COMMAND>make</COMMAND> in the root
      Swarm directory does nothing, you probably aren't running GNU
      Make.</PARA>

    <PARA>There is now an explicit "installation" step to install
      Swarm -- <COMMAND>make install</COMMAND> so that binaries and
      libraries can be installed cleanly to a specified location.  On
      many Unix systems this likely to somewhere like
      <FILENAME>/usr/local/</FILENAME>.
    </PARA>
 
    <PARA>The Makefiles included by user-created libraries, and
      user-created applications are <FILENAME>Makefile.lib</FILENAME>,
      and <FILENAME>Makefile.appl</FILENAME>, respectively.  These
      distributed with earlier versions are now generated by
      <COMMAND>configure</COMMAND> .  If you run into problems, the
      right thing to do is to re-run <COMMAND>configure</COMMAND>, and
      re-install Swarm, tinkering with these generated Makefiles
      directly is not recommended.
    </PARA>

   </SIMPLESECT>

  <SIMPLESECT>

    <TITLE>Compiling and Running Swarm Applications</TITLE>
    
    <PARA>Swarm applications are distributed separately: you will need
      to download and unpack applications independently. After the
      application is unpacked, you will have to change the
      <LITERAL>SWARMHOME</LITERAL> variable in the Makefile. It is
      setup, by default to point to "../swarm", as if the Swarm
      libraries were in a sibling directory called "swarm". Just edit
      that string to point to where you installed the Swarm
      libraries. No other configuration should be necessary.  For
      example in the Makefile for your Swarm application, change:

<PROGRAMLISTING>
SWARMHOME=../swarm
</PROGRAMLISTING>
to the following format:

<PROGRAMLISTING>
SWARMHOME=&lt;path to where Swarm is installed&gt;
</PROGRAMLISTING>

For example, a typical place a system admin might install Swarm is:

<PROGRAMLISTING>
SWARMHOME=/usr/local/swarm-&lt;version_number&gt;
</PROGRAMLISTING>

      All you need to do now, to compile an application is type
      <COMMAND>make</COMMAND>.</PARA>

    <PARA>Once the application is compiled, just run it out of its own
      directory.  A control panel and a couple of parameter windows
      should pop up; press the "Go" button to watch it
      run. Congratulations!</PARA>

  </SIMPLESECT>

  <SIMPLESECT>
    <TITLE>Post-compile cleanup</TITLE>

    <PARA>After you've tried out the Swarm libraries for awhile you
      may want to clean up the intermediate .o files, and other
      generated files, in the original source directory. Once you have
      done the <COMMAND>make install</COMMAND> you can remove the
      entire source directory, or if you might want to re-install
      later with different option, just type <COMMAND>make
      clean</COMMAND> to clean-up all files generated by the original
      make.  See your the file <FILENAME>INSTALL</FILENAME> in the
      Swarm distribution, for more details.
    </PARA>

    <PARA>
      Just remember to set <LITERAL>$(SWARMHOME)</LITERAL> to the
      right directory in your application's makefile. If you have
      installed Swarm, but for some reason, need to recompile the
      library and want to start from a completely clean source
      directory, you can run <COMMAND>make uninstall</COMMAND> and
      then <COMMAND>make clean</COMMAND>- see 
      <FILENAME>INSTALL</FILENAME> file again here.</PARA>

    <PARA>For debugging purposes, you should pass the
      <LITERAL>-g</LITERAL> option to <COMMAND>configure</COMMAND>, to
      whit: <COMMAND>CFLAGS=-g ./configure &lt;the rest of your
      options&gt;</COMMAND> and leave the sources in the build or
      source tree. However, your applications will run faster if you
      compile with optimization, <COMMAND>CFLAGS=-O3
      -g</COMMAND>. This will make debugging inside the Swarm
      libraries strange, but gives noticeable performance improvement.
    </PARA>

  </SIMPLESECT>

</ARTICLE>

<!--
Local Variables:
sgml-parent-document:("installbook.sgml" "ARTICLE")
End:
-->

