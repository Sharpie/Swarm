2001-11-11  Timothy Howe  <timothyrhowe@hotmail.com>

	* Heatbug.java: changed totalHeat() to historicalHeat() and had it return
	total heat plus discarded heat. Observed that (historical heat) / (step 
	count + 1) is close to constant. 

	* HeatbugModelSwarm.java: made naming change required by change in 
	Heatbug.java. 

2001-11-09  Timothy Howe  <timothyrhowe@hotmail.com>

	* Makefile: rule for HeatbugModelSwarm.class changed to
	dynamically edit HeatbugModelSwarm.java depending on value of
	$SWARMHOME -- to support FArgumentsImpl's constructor on both
	Swarm 2.1.1 and Swarm 2.2.

2001-11-07  Marcus G. Daniels  <mgd@forager.swarm.org>

	* Heatbug.java, HeatbugModelSwarm.java: Make both
	setRandomMoveProbability methods return void.  Methods exposed to
	Swarm should not have multiple forms, as Objective C has no
	facility for this in signatures.

2001-11-07  Timothy Howe  <timothyrhowe@hotmail.com>

	* HeatbugModelSwarm.java, HeatbugObserverSwarm.java: Clarified
	documentation of need for SCM vars and (after Swarm 2.1.1)
	ProbeMap vars to be public.

	* HeatbugBatchSwarm.java: Made unhappyGraph private (now
	_unhappyGraph) to conform to standard of as much privacy as
	possible, and convention of underscore prefix for private
	variables.

	* HeatSpace.java: Clarified discussion of calculation of
	unhappiness.

	* Removed my copyright, having clarified the terms of distribution
	with Marcus.

2001-11-04  Marcus G. Daniels  <mgd@condor.santafe.edu>

	* HeatbugModelSwarm.java: Change variables _printDiagnostics,
	_evaporationRate, _worldXSize, _worldYSize, _diffusionConstant to
	be public, removing leading "_".  Probed variables must be public.
	(buildActions): Remove now-obsolete boolean argument from FArguments.

	* Heatbug.java: Change variables _x, _y, _unhappiness, 
	_idealTemperature, _outputHeat, _randomMoveProbability, and _colorIndex
	to be public, removing leading "_".  Remove setter for _colorIndex.
	Fix comment about owner of Colormap.

	* HeatbugObserverSwarm.java (buildObjects): Set the color directly.

	* Makefile (all): Don't run executable by default.

	* Remove ^M from all files.

2001-10-29  Timothy Howe  <timothyrhowe@hotmail.com>

	* readme.txt, readme.gen.html: Added files: an overview
	documentation file and an HTML version.

	* Heatbug.java (heatbugStep): Rearranged the logic of the Heatbug
	so that it doesn't calculate its ideal cell unless it is actually
	going to try to move to that cell.  
	Rearranged the logic of a Heatbug so that it doesn't calculate its
	arbitrary random move if it is perfectly happy where it is.
	Color-coded the Heatbugs according to their temperature
	preferences (from green to yellow). You can now see the more
	heat-loving bugs tending toward the center of each cluster, with
	the less heat-loving ones around the periphery.  Altered the logic
	for calculating xm1 and ym1 in Heatbug.java. The logic had been
	based on an assumption about how modulo works, which is a correct
	assumption for some programming languages but not for Java.
	Here's proof of the need for the change:

    	int x = 0;
    	int size = 10;
    	System.out.println ("Here is what Heatbug.java was doing:");
    	System.out.println ("(" + x + " - 1) % size is " + (x - 1) % size);
        	// that prints -1 (wrong answer)
    	System.out.println ("Here is what Heatbug.java does as I altered it:");
    	System.out.println ("(" + x + " - 1 + size) % size is " + (x - 1 + size) % size);
        	// that prints 9 (correct answer)

	(By the way, Perl, for example, gives different answers from Java
	for modulo of a negative number. In Perl, the graph of modulo is
	continuous across zero; in Java, the graph is bilaterally
	symmetric about zero.)

	* HeatCell.java: Removed file.  Replaced HeatCell with
	java.awt.Point, which has the same functionality, is more familiar
	to Java developers, and will decrement the number of custom
	classes that a student of jheatbugs needs to understand.

	* *.java: Simplified the use of List, LinkedList, and ArrayList
	(by changing them all to ArrayList).
	Revamped the documentation almost entirely.  Formatted the
	documentation to produce nice javadoc output.
	Removed all inner classes by flattening them into plain Java code.
	Done to make code easier to understand without the complexity of
	inner classes -- even for readers familiar with inner classes in
	general. The inner classes removed were not adapters; they added
	no methods except a few initialization-time convenience methods
	logic was simpler to implement in plain private methods
	(probeMessage () and (probeVariable ()).

	* Makefile: Arranged the Makefile for more straightforward and
	automatic dependencies.  Added a "run" target as the default
	target, to let the developer invoke the application by typing
	"make" or "make runbatch", with the guarantee that the latest code
	will run, not some possibly obsolete code.

	* current.pl, current.ksh, current.bat: Added files: an
	application-invoking wrapper, current.pl, and a shell wrapper for
	that, current.ksh.  A DOS wrapper, current.bat, which does not yet
	work, but shouldn't be too hard to fix since it's only one line.

	* StartHeatbugs.java: Added command-line options; see
	StartHeatbugs.java and current.pl for details, or invoke "current
	--help".
	Factored common code from both branches of the "if
	(Globals.env.guiFlag) ... else ..." logic into the methods build()
	and unbuild().

	* Heatbug.java (heatbugStep): Defined as synchronized, because,
	given the existing algorithm, the decision of which cell to move
	to cannot be multi-threaded.
	(addHeatbug): Changed to addHeatbugs (int numNewBugs), because so
	far as I can tell, a user can't enter a Heatbug in the probe
	display.
	(toString): Added for diagnostic purposes
	Started to alter the calculation of Heatbug unhappiness. You
	probably don't get happier just by existing through time -- why
	should a Heatbug?  Trying to neutralize the effect of increasing
	heat. Without undergoing a significant performance penalty.
	
	* HeatbugModelSwarm.java: Simplified the logic controlling the
	update order (random or sequential), mostly by eliminating local
	copies of FActionForEach.defaultOrder. Done for simplicity and to
	remove the need to synchronize; performance will improve slightly,
	since getters and setters in Java are just as fast as public
	access to variables.
	(modelStep): Added for diagnostic purposes.

	* A number of other, small changes, which would be easier to
	understand by comparing the code than by reading descriptions of
	them.

2000-09-19  Alex Lancaster  <alex@swarm.org>

	* HeatbugModelSwarm.java: Removed language argument to
	FArgumentsImpl.

2000-09-14  Marcus G. Daniels  <mgd@nest.swarm.org>

	* HeatbugModelSwarm.java (buildActions): Use language symbol
	to FArgumentsImpl constructor.

2000-09-10  Marcus G. Daniels  <mgd@forager.swarm.org>

	* Heatbug.java (Heatbug): Remove `public' from world, heat, and
	scratchHeatCell.
	
2000-02-27  Marcus Daniels  <mgd@nest.swarm.org>

	* StartHeatbugs.java (main): Update for 2.1 and SDG.

	* HeatbugModelSwarm.java (buildActions): Store prototype in 
	a variable.

2000-01-24  Marcus Daniels  <mgd@nest.swarm.org>

	* jheatbugs.scm: New file.

	* HeatbugBatchSwarm.java: Remove parameter settings in constructor.
	(buildObjects): Use lispAppArchiver to create HeatbugModelSwarm.

	* StartHeatbugs.java: Use lispAppArchiver to create HeatbugBatchSwarm.

1999-12-27  Marcus Daniels <mgd@DRONE>

	* Heatbug.java (Heatbug): Change x, y, idealTemperature,
	outputHeat from long to int.
	(setOutputHeat, setIdealTemperature): Use long instead of int.
	(heatbugStep): Use long instead of int for heat.

	* HeatSpace.java (maxHeat, addHeat$X$Y, findExtremeHeat$X$Y):
	Use int instead of long.

1999-12-22  Marcus Daniels  <mgd@nest.swarm.org>

	* HeatbugModelSwarm.java: Don't include FArguments, FCall creating
	implementation and interface.
	(buildActions): Use FCall and FArguments constructors to condense
	things somewhat.

1999-12-21  Marcus Daniels  <mgd@nest.swarm.org>

	* HeatbugModelSwarm.java (actionForEach): New ivar.
	(syncUpdateOrder): New method.
	(toggleRandomizedOrder, buildActions): Call it.
	(buildActions): Rework to use setSelector$setJavaFlag.

	* Heatbug.java: Rename step to heatbugStep.

1999-12-10  Marcus Daniels  <mgd@nest.swarm.org>

	* HeatbugModelSwarm.java: Use createActionForEachHomogeneous$call
	instead of createActionForEach$call$setFinalizationFlag.

1999-11-20    <mgd@VAIO>

	* Heatbug.java: New variable scratchHeatCell (only used for
	return value from HeatSpace's findExtremeType$X$Y. 	

	* HeatSpace.java: New variables sizeX and sizeY to cache
	worldSize.  Use HeatCell field references for x and y instead
	of getters.

	* HeatCell.java: Make x and y public.

1999-11-19  Marcus G. Daniels  <mgd@pojoaque.santafe.edu>

	* HeatbugModelSwarm.java: Import {FArguments,FCall}[C]{Impl}.
	Import FActionForEach instead of ActionForEach.
	(buildActions): Use FActionForEach with FCall (instead of
	ActionForEach with a Selector).

	* Heatbug.java (step): Make method a void return.

1999-11-18  Marcus G. Daniels  <mgd@pojoaque.santafe.edu>

	* HeatbugObserverSwarm.java: Import java.util.List instead of
	swarm.collections.List.
	(buildObjects): Use size instead of getCount.

	* HeatbugModelSwarm.java: Import java.util.LinkedList and
	java.util.List instead of swarm.collections.ListImpl and
	swarm.collections.List.
	(addHeatbug, buildObjects): Use add instead of addLast.
	(buildObjects): Use LinkedList constructor instead of ListImpl.

1999-09-18  Marcus G. Daniels  <mgd@pojoaque.santafe.edu>

	* Initial release.

1999-09-16  Marcus G. Daniels  <mgd@pojoaque.santafe.edu>

	* HeatbugBatchSwarm.java: Add disabled code for loading from
	lispAppArchiver.

	* HeatbugModelSwarm.java (buildActions): Add Randomized ForEach
	ordering.

1999-09-16  Marcus Daniels <mgd@HELEN>

	* HeatbugObserverSwarm.java: Add drop method to disable
	destroy notification for unhappyGraph and worldRaster.

1999-09-14  Alex Lancaster  <alex@santafe.edu>

	* HeatbugObserverSwarm.java (buildObjects): Pass windowGeometry
	name to ZoomRaster creation

1999-09-12  Marcus G. Daniels  <mgd@pojoaque.santafe.edu>

	* HeatbugObserverSwarm.java: Add geometry record names
	to all archived ProbeDisplay calls, worldRaster, and unhappyGraph.

	* StartHeatbugs.java: Add app name, version, and bug address
	arguments to initSwarm.
	(StartHeatbugs): Add name argument to setWindowGeometryRecordName.

	* HeatbugObserverSwarm.java (buildObjects): Pass windowGeometry
	name to EZGraph creation.

1999-09-08  Marcus G. Daniels  <mgd@pojoaque.santafe.edu>

	* HeatbugBatchSwarm.java: Activate stopSchedule.

	* HeatSpace.java: Use ArrayList instead of Swarm List.

