1999-04-07  Alex Lancaster  <alex@santafe.edu>

	* DiGraphNode.h (@interface): Cast nodeType to id <Symbol>.

1998-08-20  Marcus G. Daniels  <mgd@wijiji.santafe.edu>

	* Makefile (SWARMHOME): Default to 1998-08-20.
	Remove dist cruft.

1998-08-17  Marcus G. Daniels  <mgd@wijiji.santafe.edu>

	* Makefile: Include Makefile.appl from $(SWARMHOME)/etc/swarm.

1998-04-22  Marcus G. Daniels  <mgd@wijiji.santafe.edu>

	* DiGraphLink.m ([DiGraphLink -createEnd]): Reformatting.
	([DiGraphLink update]): Don't update unless there is a linkItem.
	([DiGraphLink hideLink]): Don't drop unless there is a linkItem.

	* DiGraph.m ([DiGraph +createBegin:]): Create nodeList here, not
	in createEnd (removed).

	* DiGraph.h: Don't declare createEnd.

	* DiGraph.h, DiGraphNode.h: Include objectbase/SwarmObject.h
	instead of objectbase.h.  

1998-02-26  Marcus G. Daniels  <mgd@wijiji.santafe.edu>

	* DiGraphNode.m: Don't include string.h, stdio.h, stdlib.h,
	gui.h, objc-api.h, and simtools.h. Include simtoolsgui.h and random.h.
	Reformatting throughout.

	* DiGraph.m: Don't include simtools.h, string.h, stdio.h, or
	stdlib.h.  Include random.h
	([DiGraph -redistribute]): Use 2.0 * M_PI instead of constant.
	Minor reformatting.

1998-02-25  Alex Lancaster  <alex@santafe.edu>

	* DiGraph.m (#import): Replaced separate imports of header files
	 with <graph.h>

	* graph.h (DEFAULT_RANDOM_SEED): Added to make global for entire
	library.

	* DiGraphNode.[hm] ([DiGraphNode -setCanvas:withRandPosFunc:]):
	Added to allow placement of nodes on canvas with a specific random
	number generator, to make placement of nodes reliable if the graph
	is hidden or re-displayed.

	* DiGraphNode.m ([DiGraphNode -setCanvas:]): is now a wrapper for this
	new method which is called with the current random number
	distribution. If no distribution is specified, then it defaults to
	the simtools RNG. Use of this method is DEPRECATED.

	* DiGraphNode.[hm] ([DiGraphNode -setRandPosFunc:]): added to allow
	independent setting of position random number distribution. Sets
	the new instance variable.

	* DiGraph.[hm] ([DiGraph -setCanvas: withRandPosSeed:]) Added to
	allow placement of nodes on canvas with a specific random number
	seed, to make placement of nodes reliable if the graph is hidden
	or re-displayed. The random number generator, is always the
	"PMMLCG1" and the distribution is the UniformInteger type.

	* DiGraph.[hm] ([DiGraph -setCanvas:]) Original method made a
	 wrapper for this new method which is called with the current
	 random number distribution. If no distribution is specified, then
	 it defaults to a DEFAULT_RANDOM_SEED specified in graph.h.

	* DiGraph.[hm] ([DiGraph -setRandPosSeed:]): added to allow
	independent setting of position random number distribution. Sets
	the new instance variable.

	* DiGraph.m ([DiGraph -showCanvas]): creates the same random
	number distribution as the ([DiGraph -setCanvas:]) method. Also
	cycles through the node list and sends a message with the new
	distribution to each node.

	* DiGraph.m ([DiGraph addNode:]): If a canvas is already set, then
	pass the random number distribution "uRandPosition" to each node.

	* DiGraph.m ([DiGraph update]): changed globalTkInterp "idle
	tasks" call to the new GUI-independent macro
	GUI_UPDATE_IDLE_TASKS().

	* DiGraph.m ([DiGraph +createBegin:]): make randPosSeed equal the
	DEFAULT_RANDOM_SEED specified in graph.h.

1998-01-24  Marcus G. Daniels  <mgd@wijiji.santafe.edu>

	* DiGraphNode.m: Include gui.h instead of tkobjc.h.
	Reformatting throughout.

	* DiGraphNode.h: Include gui.h.  Make canvas conform to
	the Canvas protocol, nodeItem to the NodeItem protocol.
	Reformatting throughout.

	* DiGraphLink.m: Include gui.h instead of tkobjc.h.
	Reformatting throughout.

	* DiGraphLink.h: Reformatting throughout.

	* DiGraph.m: Include gui.h instead of tkobjc.h.
	Reformatting throughout.

	* DiGraph.h: Include gui.h.
	(DiGraph): Make canvas conform to the Canvas protocol.
	Reformatting throughout.

1998-01-19  Alex Lancaster  <alex@santafe.edu>

	* Makefile: Added $(CURDIR), $(DISTSRC) and $(SRCS) to create a
	completely generic "make dist" target for eventual inclusion in
	a configuration Makefile.

1998-01-16  Alex Lancaster  <alex@santafe.edu>

	* Makefile (dist): Added new target to create archive. Creates it
	in the current directory with a directory name specified by a
	$TARNAME variable.

1998-01-14  Marcus G. Daniels  <mgd@wijiji.santafe.edu>

	* DiGraphLink.m: Don't do anything except set the canvas variable
	if canvas is nil.

	* DiGraphLink.m ([DiGraphLink -setCanvas:]): Likewise.

	* DiGraph.m ([DiGraph -setCanvas:]): Apply setCanvas to all nodes.

1998-01-13  Marcus G. Daniels  <mgd@wijiji.santafe.edu>

	* DiGraphNode.m ([DiGraphNode -showContent]): Use
	CREATE_PROBE_DISPLAY.

	* Makefile (SWARMHOME): Bump to version 1.0.5.

1998-01-12  Alex Lancaster  <alex@santafe.edu>

	* DiGraphLink.[hm]: Added ([DiGraphLink -hideLink]) for
	interactive dropping of links. Modified ([DiGraph -createEnd]) and
	([DiGraph -setCanvas]) to allow these methods to be performed in
	any order.

	* DiGraphNode.[hm]: Added ([DiGraphNode -hideNode]) to allow
	 dropping of node from Canvas independent of dropping of node
	 itself.

	* DiGraphNode.[hm]: Added ([DiGraphNode -getToLinks]) and
	([DiGraphNode -getFromLinks]) for a DiGraph object to probe the
	node's links.

	* DiGraph.m Added methods ([DiGraph -showCanvas]) and ([DiGraph
	-hideCanvas]) to allow dynamic showing and hiding of a DiGraph as
	simulation runs.

1997-12-12  Marcus G. Daniels  <mgd@wijiji.santafe.edu>

	* DiGraphNode.m ([DiGraphNode -setNodeLabel:aLabel]): Constify
	argument.

	* DiGraphNode.h (DiGraphNode): Constify label.
	Constify argument to setNodeLabel.

	* Makefile (SWARMHOME): Don't define if already defined in
	environment.

	* DiGraphNode.m: Switch from #include to #import for tkobjc.h
	and simtools.h.

	* DiGraph.m: Switch from #include to #import for tkobjc.h and
	simtools.h.
	([DiGraph -boingStep]): Initialize n to 0 to avoid warning.

