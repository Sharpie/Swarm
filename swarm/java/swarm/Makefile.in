prefix=@prefix@
datadir=@datadir@
jdkdir=@jdkdir@
INSTALL=@INSTALL@
jdkdir=@jdkdir@
jdkbindir=$(jdkdir)/bin
JAR=@JAR@
JAVAC=@JAVAC@
JAVACLASSES=@JAVACLASSES@
srcdir=@srcdir@
VPATH=$(srcdir)
JAVACOMPILE = $(JAVAC) -classpath '..@PATHSEP@$(JAVACLASSES)'

include ../Makefile.common

CLASSPHASES := __c U
INTERFACEPHASES := $(CLASSPHASES) S

PRECLASSES = NonUniqueMethodSignatureException SignatureNotFoundException Selector
POSTCLASSES = SwarmEnvironment

define module-class-files
$(addprefix $(module)/,$(subst __c,,$(foreach sfx,$(CLASSPHASES),$(addsuffix $(sfx),$($(module)PROTOCOLS)))))
endef

define module-interface-files
$(addprefix $(module)/,$(subst __c,,$(foreach sfx,$(INTERFACEPHASES),$(addsuffix $(sfx),$(addprefix i_,$($(module)PROTOCOLS))))))
endef

GENCLASSFILES := $(addsuffix .class,$(foreach module,$(MODULES),$(module-class-files)))

GENINTERFACEFILES := $(addsuffix .class,$(addprefix $(foreach module,$(MODULES),$(module-interface-files))))

GENFILES = $(addprefix swarm/,$(GENCLASSFILES) $(GENINTERFACEFILES))

SWARMGENFILES = $(addprefix swarm/,$(GENFILES))
SWARMCLASSES = $(PRECLASSES) $(POSTCLASSES)
SWARMCLASSFILES = $(addsuffix .class,$(addprefix swarm/,$(SWARMCLASSES)))

ALLCLASSFILES = $(SWARMCLASSFILES) $(SWARMGENFILES)

PRECLASSESFILES = $(addsuffix .class,$(PRECLASSES))
POSTCLASSESFILES = $(addsuffix .class,$(POSTCLASSES))

all: modules $(POSTCLASSESFILES)

$(POSTCLASSESFILES): $(PRECLASSESFILES) $(GENFILES)

deps: 
	for module in $(MODULES); do $(MAKE) -C $$module .deps; done

modules: deps $(addsuffix .class,$(PRECLASSES))
	for module in $(MODULES); do $(MAKE) -C $$module all; done

jar: all
	cd .. ; unset CLASSPATH ; $(JAR) cf swarm/swarm.jar $(ALLCLASSFILES)

install-java-classes-as-jar: jar
	test -d $(datadir) || mkdir $(datadir)
	test -d $(datadir)/swarm || mkdir $(datadir)/swarm
	$(INSTALL) swarm.jar $(datadir)/swarm

install-java-classes-as-files: all
	test -d $(datadir) || mkdir $(datadir)
	$(RM) ../filelist
	for f in $(SWARMCLASSES); do echo $$f >> ../filelist ; done
	$(foreach module,$(MODULES),for f in $(module-class-files); do echo $$f >> ../filelist; done;)
	$(foreach module,$(MODULES),for f in $(module-interface-files); do echo $$f >> ../filelist; done;)
	sed -e 's,^,swarm/,' -e 's,$$,\.class,' < ../filelist > ../filelist.new
	(cd ..; tar -c -f - -T filelist.new) | (cd $(datadir); tar xf -)
	$(RM) ../filelist ../filelist.new

install: install-java-classes-as-@JAVA_CLASSES_INSTALLED_AS@

# for the non-generated Java (the other rules from JavaDep use JAVACOMPILE)
%.class: %.java
	$(JAVACOMPILE) -d .. @PATHEXPR@
