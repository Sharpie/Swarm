CURRENT = 1
REVISION = 0
AGE = 0
STUBSCURRENT = 0
STUBSREVISION = 0
STUBSAGE = 0
include ../Makefile.common

top_srcdir=@top_srcdir@
top_builddir=../..
abs_top_builddir := $(shell cd $(top_builddir); pwd)
abs_builddir := $(shell pwd)
srcdir=@srcdir@

include $(top_builddir)/etc/Makefile.common

SHELL=@SHELL@
RANLIB=@RANLIB@
INSTALL=@INSTALL@
LIBTOOL=@LIBTOOL@
DLLWRAP=@DLLWRAP@
MACOSJAVA=@MACOSJAVA@

VPATH=$(srcdir)

LIBOBJCINCLUDES=@LIBOBJCINCLUDES@
JAVAINCLUDES=@JAVAINCLUDES@

override CPPFLAGS += $(JAVAINCLUDES) $(LIBOBJCINCLUDES) -I$(top_srcdir)/src/misc -I$(top_builddir) -I$(top_builddir)/src -I$(top_srcdir)/src $(foreach module,$(MODULES),-I$(top_builddir)/src/$(module) -I$(top_srcdir)/src/$(module)) -I$(srcdir) $(GNUSTEPLIBINCLUDES)

# Solaris JNI headers have some pragmas
override CFLAGS += @CFLAGS_NOWARN_UNKNOWN_PRAGMAS@
override OBJCFLAGS += @CFLAGS_NOWARN_UNKNOWN_PRAGMAS@

modulePROTOCOLS = $(foreach module,$(MODULES),$($(module)_creatable_PROTOCOLS))

javaswarm_entities = SwarmEnvironmentExtra SwarmEnvironment predispatch
libjavaswarm_la_OBJECTS = $(addsuffix .lo, $(javaswarm_entities))
javaswarm_OBJECTS = $(addsuffix .o, $(javaswarm_entities))
libjavaswarmstubs_la_OBJECTS = $(foreach module,$(MODULES),$(module)_stubs.lo)
javaswarmstubs_OBJECTS = $(foreach module,$(MODULES),$(module)_stubs.o)

JAVASWARM_DLL = @JAVASWARM_DLL@
LIBJAVASWARM_LA = @LIBJAVASWARM_LA@

JAVASWARM_LIB_NAME = @JAVASWARM_LIB_NAME@
_LIBJAVASWARM_LA = lib${JAVASWARM_LIB_NAME}.la
_LIBJAVASWARMSTUBS_LA = lib${JAVASWARM_LIB_NAME}stubs.la

all: $(JAVASWARM_DLL) $(LIBJAVASWARM_LA)

$(libjavaswarmstubs_la_OBJECTS): $(top_srcdir)/src/defobj/directory.h

clean:
	-rm -rf .libs _libs
	-rm -f *.lo
	-rm -f *.o

USEDLL = @USEDLL@
ifeq ($(USEDLL),no)
install: install-la
else
install: install-dll
endif

install-la: all
	$(LIBTOOL) --mode=install $(INSTALL) $(_LIBJAVASWARM_LA) $(DESTDIR)$(libdir)
	$(LIBTOOL) --mode=finish $(DESTDIR)$(libdir)

install-dll: all
	$(INSTALL) $(JAVASWARM_DLL) $(DESTDIR)$(bindir)

%_stubs.m:
	cat $(addsuffix .m,$($*_creatable_PROTOCOLS)) > $*_stubs.m

$(_LIBJAVASWARMSTUBS_LA): $(libjavaswarmstubs_la_OBJECTS)
	$(LIBTOOL) --mode=link $(OBJC) $(CFLAGS) -o $@ -version-info $(STUBSCURRENT):$(STUBSREVISION):$(STUBSAGE) $^

ifeq ($(MACOSJAVA),yes)
$(_LIBJAVASWARM_LA): $(_LIBJAVASWARMSTUBS_LA) $(libjavaswarm_la_OBJECTS)
	$(LIBTOOL) --mode=link $(OBJC) $(CFLAGS) -o $@ -shrext .jnilib -version-info $(CURRENT):$(REVISION):$(AGE) -L$(abs_top_builddir)/libobjc -rpath $(DESTDIR)$(libdir) $(libjavaswarm_la_OBJECTS) $(_LIBJAVASWARMSTUBS_LA) -L$(abs_top_builddir)/src $(SWARMLIBS) $(OBJCLIBS) $(BLTLIB)
else
$(_LIBJAVASWARM_LA): $(_LIBJAVASWARMSTUBS_LA) $(libjavaswarm_la_OBJECTS)
	$(LIBTOOL) --mode=link $(OBJC) $(CFLAGS) -o $@ -version-info $(CURRENT):$(REVISION):$(AGE) -L$(abs_top_builddir)/libobjc -rpath $(DESTDIR)$(libdir) $(libjavaswarm_la_OBJECTS) $(_LIBJAVASWARMSTUBS_LA) -L$(abs_top_builddir)/src $(SWARMLIBS) $(OBJCLIBS)
endif

ENTRYCMD=-e @JAVASWARM_DLL_ENTRY@

$(JAVASWARM_DLL): $(_LIBJAVASWARM_LA) $(_LIBJAVASWARMSTUBS_LA) javaswarm.dll.c
	$(CC) -g -c $(srcdir)/javaswarm.dll.c
	ld -shared --add-stdcall-alias $(ENTRYCMD) --export-all-symbols -o $(JAVASWARM_DLL) javaswarm.dll.o $(javaswarmstubs_OBJECTS) $(javaswarm_OBJECTS) $(top_builddir)/src/SwarmEnvironment.o $(top_builddir)/src/classList.o $(foreach module,$(SWARMMODULES),$(top_builddir)/src/$(module)/*.o) ../../avcall/avcall.o ../../avcall/avcall-i386-msvc.o $(filter-out $(top_builddir)/libobjc/objc.dll.o,$(wildcard $(top_builddir)/libobjc/*.o)) $(SUPPORTLDFLAGS) $(filter-out $(FFILIB),$(SYSLIBS)) -lcygwin -lkernel32 `$(CC) -print-libgcc-file-name`

%.lo: %.m
	$(LIBTOOL) --mode=compile $(OBJC) $(CPPFLAGS) $(OBJCFLAGS) -c $<

%.lo: %.c
	$(LIBTOOL) --mode=compile $(CC) $(CPPFLAGS) $(CFLAGS) -c $<

predispatch.c: $(javaswarmstubs_OBJECTS)
	(echo "#include <objc/objc.h>"; echo "#include <objc/objc-api.h>"; sort *-head.c | uniq;  echo "void swarm_java_predispatch () {"; sort *-body.c | uniq ; echo "}") > predispatch.c

predispatch.lo: predispatch.c
       $(LIBTOOL) --mode=compile $(CC) -c -g predispatch.c

