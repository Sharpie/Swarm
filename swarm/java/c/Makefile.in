CURRENT = 0
REVISION = 0
AGE = 0
STUBSCURRENT = 0
STUBSREVISION = 0
STUBSAGE = 0
include ../Makefile.common

top_srcdir=@top_srcdir@
top_builddir=../..
abs_top_builddir := $(shell cd $(top_builddir); pwd)
abs_builddir := $(shell pwd)
srcdir=@srcdir@

include $(top_builddir)/etc/Makefile.common

SHELL=@SHELL@
RANLIB=@RANLIB@
INSTALL=@INSTALL@
LIBTOOL=@LIBTOOL@
DLLWRAP=@DLLWRAP@

VPATH=$(srcdir)

JAVAINCLUDES=@JAVAINCLUDES@

override CPPFLAGS += $(JAVAINCLUDES) -I$(top_builddir)/libobjc -I$(top_srcdir)/libobjc -I$(top_srcdir)/src/misc -I$(top_builddir) -I$(top_builddir)/src -I$(top_srcdir)/src $(foreach module,$(MODULES),-I$(top_builddir)/src/$(module) -I$(top_srcdir)/src/$(module)) -I$(srcdir)

# Solaris JNI headers have some pragmas
override CFLAGS += @CFLAGS_NOWARN_UNKNOWN_PRAGMAS@
override OBJCFLAGS += @CFLAGS_NOWARN_UNKNOWN_PRAGMAS@

modulePROTOCOLS = $(foreach module,$(MODULES),$($(module)_creatable_PROTOCOLS))

javaswarm_entities = SwarmEnvironment
libjavaswarm_la_OBJECTS = $(addsuffix .lo, $(javaswarm_entities))
javaswarm_OBJECTS = $(addsuffix .o, $(javaswarm_entities))
libjavaswarmstubs_la_OBJECTS = $(foreach module,$(MODULES),$(module)_stubs.lo)
javaswarmstubs_OBJECTS = $(foreach module,$(MODULES),$(module)_stubs.o)

JAVASWARM_DLL = @JAVASWARM_DLL@
LIBJAVASWARM_LA = @LIBJAVASWARM_LA@

all: $(JAVASWARM_DLL) $(LIBJAVASWARM_LA)

$(libjavaswarmstubs_la_OBJECTS): $(top_srcdir)/src/defobj/directory.h

USEDLL = @USEDLL@
ifeq ($(USEDLL),no)
install: install-la
else
install: install-dll
endif

install-la: all
	$(LIBTOOL) --mode=install $(INSTALL) libjavaswarm.la $(libdir)
	$(LIBTOOL) --mode=install $(INSTALL) libjavaswarmstubs.la $(libdir)
	$(LIBTOOL) --mode=finish $(libdir)

install-dll: all
	$(INSTALL) javaswarm.dll $(bindir)

%_stubs.m: $(addsuffix .m,$(%_creatable_PROTOCOLS))
	cat $(addsuffix .m,$($*_creatable_PROTOCOLS)) > $*_stubs.m

libjavaswarmstubs.la: $(libjavaswarmstubs_la_OBJECTS)
	$(LIBTOOL) --mode=link $(OBJC) $(CFLAGS) -o $@ -version-info $(STUBSCURRENT):$(STUBSREVISION):$(STUBSAGE) -rpath $(libdir) $^

libjavaswarm.la: libjavaswarmstubs.la $(libjavaswarm_la_OBJECTS)
	$(LIBTOOL) --mode=link $(OBJC) $(CFLAGS) -o $@ -version-info $(CURRENT):$(REVISION):$(AGE) -L$(abs_top_builddir)/libobjc -rpath $(libdir) $(libjavaswarm_la_OBJECTS) libjavaswarmstubs.la -L$(abs_top_builddir)/src $(SWARMLIBS) -lobjc

javaswarm.dll: libjavaswarm.la libjavaswarmstubs.la javaswarm.dll.c
	$(CC) -g -c $(srcdir)/javaswarm.dll.c
	#$(DLLWRAP) --add-stdcall-alias --entry __cygwin_noncygwin_dll_entry@12 --export-all --output-def javaswarm.def --driver-name $(CC) -o javaswarm.dll javaswarm.dll.o $(javaswarmstubs_OBJECTS) $(javaswarm_OBJECTS) $(foreach module,$(SWARMMODULES),$(top_builddir)/src/$(module)/*.o) $(filter-out $(top_builddir)/libobjc/objc.dll.o,$(wildcard $(top_builddir)/libobjc/*.o)) $(SUPPORTLDFLAGS) $(SYSLIBS)
	ld-new -shared --add-stdcall-alias -e __cygwin_noncygwin_dll_entry@12 --export-all-symbols -o javaswarm.dll javaswarm.dll.o $(javaswarmstubs_OBJECTS) $(javaswarm_OBJECTS) $(foreach module,$(SWARMMODULES),$(top_builddir)/src/$(module)/*.o) $(filter-out $(top_builddir)/libobjc/objc.dll.o,$(wildcard $(top_builddir)/libobjc/*.o)) $(SUPPORTLDFLAGS) $(SYSLIBS) -lcygwin -lkernel32 `$(CC) -print-libgcc-file-name`

%.lo: %.m
	$(LIBTOOL) --mode=compile $(OBJC) $(CPPFLAGS) $(OBJCFLAGS) -c $<

%.lo: %.c
	$(LIBTOOL) --mode=compile $(CC) $(CPPFLAGS) $(CFLAGS) -c $<

