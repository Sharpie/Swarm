CURRENT = 0
REVISION = 0
AGE = 0
STUBSCURRENT = 0
STUBSREVISION = 0
STUBSAGE = 0
include ../Makefile.common

top_srcdir=@top_srcdir@
top_builddir=../..
abs_top_builddir := $(shell cd $(top_builddir); pwd)
abs_builddir := $(shell pwd)
srcdir=@srcdir@

include $(top_builddir)/etc/Makefile.common

SHELL=@SHELL@
RANLIB=@RANLIB@
INSTALL=@INSTALL@
LIBTOOL=@LIBTOOL@
DLLWRAP=@DLLWRAP@

VPATH=$(srcdir)

JAVAINCLUDES=@JAVAINCLUDES@

override CPPFLAGS += $(JAVAINCLUDES) -I$(top_builddir)/libobjc -I$(top_srcdir)/libobjc -I$(top_srcdir)/src/misc -I$(top_builddir) -I$(top_builddir)/src -I$(top_srcdir)/src $(foreach module,$(MODULES),-I$(top_builddir)/src/$(module) -I$(top_srcdir)/src/$(module)) -I$(srcdir)

# Solaris JNI headers have some pragmas
override CFLAGS += @CFLAGS_NOWARN_UNKNOWN_PRAGMAS@
override OBJCFLAGS += @CFLAGS_NOWARN_UNKNOWN_PRAGMAS@

modulePROTOCOLS = $(foreach module,$(MODULES),$($(module)PROTOCOLS))

libjavaswarmstubs__la_OBJECTS = $(addsuffix .lo, $(modulePROTOCOLS))
javaswarmstubs_OBJECTS = $(addsuffix .o, $(modulePROTOCOLS))

javaswarm_entities = SwarmEnvironment
libjavaswarm__la_OBJECTS = $(addsuffix .lo, $(javaswarm_entities))
javaswarm_OBJECTS = $(addsuffix .o, $(javaswarm_entities))

JAVASWARM_DLL = @JAVASWARM_DLL@
LIBJAVASWARM_LA = @LIBJAVASWARM_LA@

all: $(JAVASWARM_DLL) $(LIBJAVASWARM_LA)

USEDLL = @USEDLL@
ifeq ($(USEDLL),no)
install: install-la
else
install: install-dll
endif

install-la: all
	$(LIBTOOL) --mode=install $(INSTALL) libjavaswarm.la $(libdir)
	$(LIBTOOL) --mode=install $(INSTALL) libjavaswarmstubs.la $(libdir)
	$(LIBTOOL) --mode=finish $(libdir)

install-dll: all
	$(INSTALL) javaswarm.dll $(bindir)
	$(INSTALL) libjavaswarm.a $(libdir)
	$(RANLIB) $(libdir)/libjavaswarm.a

libjavaswarmstubs_.la: $(libjavaswarmstubs__la_OBJECTS)
	$(LIBTOOL) --mode=link $(OBJC) $(CFLAGS) -o $@ $(libjavaswarmstubs__la_LDFLAGS) $(libjavaswarmstubs__la_OBJECTS)

libjavaswarm_.la: $(libjavaswarm__la_OBJECTS)
	$(LIBTOOL) --mode=link $(OBJC) $(CFLAGS) -o $@ $(libjavaswarm__la_OBJECTS)

libjavaswarmstubs.la: libjavaswarmstubs_.la
	$(LIBTOOL) --mode=link $(OBJC) $(CFLAGS) -o $@ -version-info $(STUBSCURRENT):$(STUBSREVISION):$(STUBSAGE) -rpath $(libdir) libjavaswarmstubs_.la

ifeq ($(USEDLL),no)
SWARMLIBSLDFLAGS = $(foreach module,$(SWARMMODULES),-L$(abs_top_builddir)/src/$(module))
else
SWARMLIBSLDFLAGS = -L$(abs_top_builddir)/src
endif

libjavaswarm.la: libjavaswarmstubs.la libjavaswarm_.la
	$(LIBTOOL) --mode=link $(OBJC) $(CFLAGS) -o $@ -version-info $(CURRENT):$(REVISION):$(AGE) -L../libobjc -rpath $(libdir) libjavaswarm_.la libjavaswarmstubs.la $(SWARMLIBSLDFLAGS) $(SWARMLIBS) -lobjc

javaswarm.dll: libjavaswarm_.la libjavaswarmstubs_.la javaswarm.dll.c
	$(CC) -c $(srcdir)/javaswarm.dll.c
	$(DLLWRAP) --export-all --output-def javaswarm.def --implib libjavaswarmdll.a --driver-name $(CC) -o javaswarm.dll javaswarm.dll.o $(javaswarmstubs_OBJECTS) $(javaswarm_OBJECTS) $(foreach module,$(SWARMMODULES),$(top_builddir)/src/$(module)/*.o) $(top_builddir)/libobjc/*.o $(SUPPORTLDFLAGS) $(SYSLIBS)

%.lo: %.m
	$(LIBTOOL) --mode=compile $(OBJC) $(CPPFLAGS) $(OBJCFLAGS) -c $<

%.lo: %.c
	$(LIBTOOL) --mode=compile $(CC) $(CPPFLAGS) $(CFLAGS) -c $<

