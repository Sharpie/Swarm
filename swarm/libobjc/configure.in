AC_INIT(objc/objc.h)
AC_CANONICAL_SYSTEM
AM_INIT_AUTOMAKE(libobjc, 1.2)

AC_PROG_CC
AM_CONFIG_HEADER(config.h objc/externvar.h)
AC_PROG_INSTALL

#gccdir=`$CC -print-libgcc-file-name | sed 's/\/libgcc.a//'`
#AC_SUBST(gccdir)
#AC_MSG_CHECKING(if cc1obj -print-objc-runtime-info reports enough information)
#if $gccdir/cc1obj -print-objc-runtime-info </dev/null | grep INVISIBLE_STRUCT_RETURN > /dev/null; then
#  AC_MSG_RESULT(yes)
#else
#  AC_MSG_RESULT(no)
#fi

AM_PROG_LIBTOOL

test -n "$OBJC" || OBJC="$CC"
AC_SUBST(OBJC)
test -n "$OBJCFLAGS" || OBJCFLAGS="$CFLAGS"
OBJCFLAGS="$OBJCFLAGS -Wall -Werror"
AC_SUBST(OBJCFLAGS)   

# Pass with no value to take the default
# Pass with a value to specify a thread package
AC_ARG_ENABLE(threads,
[  --enable-threads        enable thread usage for target GCC.
  --enable-threads=LIB    use LIB thread package for target GCC.],
if test x$enable_threads = xno; then
        enable_threads=''
fi,
enable_threads='')

enable_threads_flag=$enable_threads

# Check if a valid thread package
case x${enable_threads_flag} in
        x | xno)
                # No threads
                target_thread_file='single'
                ;;
        xyes)
                # default
                target_thread_file=''
                ;;
        xdecosf1 | xirix | xmach | xos2 | xposix | xpthreads | xsingle | \
        xsolaris | xwin32 | xdce | xvxworks)
                target_thread_file=$enable_threads_flag
                ;;
        *)
                echo "$enable_threads is an unknown thread package" 1>&2
                exit 1
                ;;
esac

OBJC_THREAD_FILE=thr-$target_thread_file
AC_SUBST(OBJC_THREAD_FILE)

AC_ARG_ENABLE(objc-gc,
[  --enable-objc-gc       enable the use of Boehm's garbage collector with
                          the GNU Objective-C runtime.],
if [[[ x$enable_objc_gc = xyes ]]]; then
        CPPFLAGS="$CPPFLAGS -DOBJC_WITH_GC"
fi)

md_CREATE_LIBOBJC_HEADERS

md_CHECK_DLL
if test $USEDLL = yes; then
  LIBOBJC_LA=libobjc.la
  OBJC_DLL=objc.dll
else
  LIBOBJC_LA=libobjc.la
  OBJC_DLL=
fi
AC_SUBST(LIBOBJC_LA)
AC_SUBST(OBJC_DLL)

AC_CHECK_HEADERS(sys/sigevent.h)
AC_OUTPUT([Makefile objc/Makefile doc/Makefile m4/Makefile])
