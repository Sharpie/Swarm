SUBDIRS = objc doc m4

CURRENT = 0
REVISION = 0
AGE = 0

CSRC = archive.c class.c encoding.c gc.c hash.c init.c misc.c nil_method.c objects.c sarray.c selector.c sendmsg.c thr.c 

MSRC = NXConstStr.m Object.m Protocol.m linking.m mframe.m

EXTRA_DIST = thr-dce.c thr-decosf1.c thr-irix.c thr-mach.c thr-os2.c thr-posix.c thr-pthreads.c thr-single.c thr-solaris.c thr-vxworks.c thr-win32.c config

INCLUDES = -I$(top_srcdir)/objc -I$(top_srcdir)

lib_LTLIBRARIES = @inst_LIBS@
noinst_LTLIBRARIES = @noinst_LIBS@
EXTRA_LTLIBRARIES = libswarmobjc.la

libswarmobjc_la_SOURCES = $(CSRC) $(MSRC)
libswarmobjc_la_LDFLAGS = @inst_LDFLAGS@
libswarmobjc_la_LIBADD = $(objc_thread_lo) # -lgcc
libswarmobjc_la_DEPENDENCIES = $(objc_thread_lo)

override CPPFLAGS += -DBUILDING_LIBOBJC

objc_thread_lo = @OBJC_THREAD_FILE@.lo

encoding.lo gc.lo sendmsg.lo: compiler-info.h

COMPILERINFOHEADER = @COMPILERINFOHEADER@

compiler-info.h: $(COMPILERINFOHEADER)
	cp $(COMPILERINFOHEADER) $@

if USEDLL
DLLOBJS = $(addsuffix .lo,$(basename $(libswarmobjc_la_SOURCES)))

objc.dll: libswarmobjc.la objc.dll.c
	$(CC) -c $(srcdir)/objc.dll.c -o objc.dll.o
	$(DLLWRAP) --export-all-symbols --output-def libswarmobjc.def --implib libswarmobjcdll.a --driver-name $(CC) -o objc.dll objc.dll.o $(DLLOBJS) $(objc_thread_lo)

#$(CC) -Wl,-shared -Wl,--export-all-symbols -Wl,--output-def,libswarmobjc.def -Wl,--out-implib,libswarmobjcdll.a -o objc.dll objc.dll.o $(DLLOBJS) $(objc_thread_lo)

#install-data-local: 
#	$(INSTALL) libswarmobjcdll.a $(DESTDIR)$(libdir)
#	ranlib $(DESTDIR)$(libdir)/libswarmobjcdll.a
endif

#CC1OBJ = @gccdir@/cc1obj

#compiler-info.h:
#	echo "" > tmp-compiler
#	echo "/* This file is automatically generated */" > $@
#	$(CC1OBJ) -print-objc-runtime-info tmp-compiler >> $@
#	$(RM) tmp-compiler
