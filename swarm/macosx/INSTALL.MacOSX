If you are reading this, you got the code already.    

If you have a source tarball
see the README.MacOSX for how to get cvs code.

In your BLT install, ensure you have a symlink bltGraph.tcl linked to graph.tcl.
i.e. do this
cd 'your BLT library directory'/lib/blt2.4
ln -s graph.tcl bltGraph.tcl

Xcode project build
Edit $SRCROOT/macosx/configure.sh
to reflect appropriate paths on your system.  The defaults will 
reflect the paths for the binary installers from SDG.
If you do not need Java remove the '--with-jdk' line.  It will save a lot of time in the build.
Open the Xcode project and build the targets:
	If you have cvs sources you will need to build autogen first then 
	config and buildlib in that  order.  
	
	If you started from a source tarball or have built autogen in the cvs
	sources then build Swarm, which build config and buildlib. 

To start over delete everything in $SRCROOT/macosx/build.  You will save time
by not deleting the swarmx.build folder which contains indexes.

To install do 'make install' in the build directory.  You may need sudo according to your prefix.

If you think IDEs are for wimps, try:

cd $SRCROOT/macosx/build

setenv MACOSX_DEPLOYMENT_TARGET 10.3    ('10.2' if building on Jaguar)

../../../autogen.sh

../../../configure \
JAVAC=jikes CC="gcc -B ../../tools"\
CFLAGS="g -O2 -Wno-long-double" \  (plus any optimisation or debug flags)
--prefix=/usr/local/Swarm2.2 \  (or some other install path)
--with-tcldir='your tcl path' \
--with-tkdir='your tk path \
--with-bltdir='your BLT path' \
--with-jdkdir=/System/Library/Frameworks/JavaVM.framework \ (for Apple's JDK)
--with-hdf5dir='your HDF5 path'\
--with-png='your libpng path' \
--enable-onelib \
--disable-fast-install \
--disable-static 
   

make

make install    (sudo may be needed if installing outside your home directory)

Note: The -B option to gcc is only needed if building java.

That's it.

You will need to fix up PATH, SWARMHOME and DYLD_LIBRARY_PATH to get the run 
time linking to work.
If you have admin right make a directory /Library/Swarm and copy the files 
swarmrc and swarmtrc from $SWARMHOME/etc/swarm into the new directory.
If you use bash (default on Panther) add the following line to ~/.profile:
source /Library/Swarm/swarmrc
If you use tcsh (default on Jaguar and earlier) add the following line to 
~/.tcshrc:
source /Library/Swarm/swarmtrc
Creat a new Terminal window and your environment should be set up correctly.


About MacOS X libraries:
MacOS X 10.3 Panther includes a system version of libtcl8.4.4 in /usr/lib.  If one of your other package libraries is in /usr/lib this directory will be added to the linker search and you may link to the system libtcl.  If this happens, you will see -L/usr/lib on the link line and any apps will crash as tk tries to startup.

If you are using my Apple gcc-4.0 build, libffi should be specified at:
/usr/lib/gcc/powerpc-apple-darwin/4.0.0
At runtime it will actually laod /usr/lib/libff1.4.0.1.dylib.  If this confuses you try reading the Apple documentation on ld and dyld.

If you have any fixes please let me know, and regularly update from the cvs so 
that you get other developers fixes.  There is no kudos reinventing the wheel.

NB. If you need to compile any GNU utilities ensure you have -no-cpp-precomp 
as an option for any Apple compiler.

Bill Northcott
w.northcott@unsw.edu.au
29 Nov 2004
