       NOTE: Most of the tests in DIEHARD return a p-value, which            
       should be uniform on [0,1) if the input file contains truly           
       independent random bits.   Those p-values are obtained by             
       p=F(X), where F is the assumed distribution of the sample             
       random variable X---often normal. But that assumed F is just          
       an asymptotic approximation, for which the fit will be worst          
       in the tails. Thus you should not be surprised with                   
       occasional p-values near 0 or 1, such as .0012 or .9983.              
       When a bit stream really FAILS BIG, you will get p's of 0 or          
       1 to six or more places.  By all means, do not, as a                  
       Statistician might, think that a p < .025 or p> .975 means            
       that the RNG has "failed the test at the .05 level".  Such            
       p's happen among the hundreds that DIEHARD produces, even             
       with good RNG's.  So keep in mind that " p happens".                  
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::     
     ::            This is the BIRTHDAY SPACINGS TEST                 ::     
     :: Choose m birthdays in a year of n days.  List the spacings    ::     
     :: between the birthdays.  If j is the number of values that     ::     
     :: occur more than once in that list, then j is asymptotically   ::     
     :: Poisson distributed with mean m^3/(4n).  Experience shows n   ::     
     :: must be quite large, say n>=2^18, for comparing the results   ::     
     :: to the Poisson distribution with that mean.  This test uses   ::     
     :: n=2^24 and m=2^9,  so that the underlying distribution for j  ::     
     :: is taken to be Poisson with lambda=2^27/(2^26)=2.  A sample   ::     
     :: of 500 j's is taken, and a chi-square goodness of fit test    ::     
     :: provides a p value.  The first test uses bits 1-24 (counting  ::     
     :: from the left) from integers in the specified file.           ::     
     ::   Then the file is closed and reopened. Next, bits 2-25 are   ::     
     :: used to provide birthdays, then 3-26 and so on to bits 9-32.  ::     
     :: Each set of bits provides a p-value, and the nine p-values    ::     
     :: provide a sample for a KSTEST.                                ::     
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::     
 BIRTHDAY SPACINGS TEST, M= 512 N=2**24 LAMBDA=  2.0000
           Results for MRG6gen.bin    
                   For a sample of size 500:     mean   
          MRG6gen.bin      using bits  1 to 24   1.980
  duplicate       number       number 
  spacings       observed     expected
        0          65.       67.668
        1         135.      135.335
        2         142.      135.335
        3          90.       90.224
        4          44.       45.112
        5          19.       18.045
  6 to INF          5.        8.282
 Chisquare with  6 d.o.f. =     1.81 p-value=  .063949
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
          MRG6gen.bin      using bits  2 to 25   2.030
  duplicate       number       number 
  spacings       observed     expected
        0          53.       67.668
        1         154.      135.335
        2         131.      135.335
        3          90.       90.224
        4          43.       45.112
        5          20.       18.045
  6 to INF          9.        8.282
 Chisquare with  6 d.o.f. =     6.27 p-value=  .605931
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
          MRG6gen.bin      using bits  3 to 26   2.078
  duplicate       number       number 
  spacings       observed     expected
        0          57.       67.668
        1         142.      135.335
        2         129.      135.335
        3          95.       90.224
        4          45.       45.112
        5          23.       18.045
  6 to INF          9.        8.282
 Chisquare with  6 d.o.f. =     3.98 p-value=  .320984
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
          MRG6gen.bin      using bits  4 to 27   1.946
  duplicate       number       number 
  spacings       observed     expected
        0          71.       67.668
        1         140.      135.335
        2         126.      135.335
        3          99.       90.224
        4          43.       45.112
        5          15.       18.045
  6 to INF          6.        8.282
 Chisquare with  6 d.o.f. =     3.06 p-value=  .199207
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
          MRG6gen.bin      using bits  5 to 28   1.978
  duplicate       number       number 
  spacings       observed     expected
        0          62.       67.668
        1         157.      135.335
        2         125.      135.335
        3          79.       90.224
        4          54.       45.112
        5          14.       18.045
  6 to INF          9.        8.282
 Chisquare with  6 d.o.f. =     8.85 p-value=  .817715
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
          MRG6gen.bin      using bits  6 to 29   1.920
  duplicate       number       number 
  spacings       observed     expected
        0          71.       67.668
        1         146.      135.335
        2         132.      135.335
        3          81.       90.224
        4          47.       45.112
        5          19.       18.045
  6 to INF          4.        8.282
 Chisquare with  6 d.o.f. =     4.37 p-value=  .373662
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
          MRG6gen.bin      using bits  7 to 30   2.012
  duplicate       number       number 
  spacings       observed     expected
        0          65.       67.668
        1         147.      135.335
        2         122.      135.335
        3          91.       90.224
        4          44.       45.112
        5          22.       18.045
  6 to INF          9.        8.282
 Chisquare with  6 d.o.f. =     3.39 p-value=  .241180
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
          MRG6gen.bin      using bits  8 to 31   1.980
  duplicate       number       number 
  spacings       observed     expected
        0          63.       67.668
        1         151.      135.335
        2         129.      135.335
        3          86.       90.224
        4          42.       45.112
        5          21.       18.045
  6 to INF          8.        8.282
 Chisquare with  6 d.o.f. =     3.34 p-value=  .234569
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
          MRG6gen.bin      using bits  9 to 32   3.844
  duplicate       number       number 
  spacings       observed     expected
        0          10.       67.668
        1          39.      135.335
        2          85.      135.335
        3          96.       90.224
        4          96.       45.112
        5          81.       18.045
  6 to INF         93.        8.282
 Chisquare with  6 d.o.f. =  1280.48 p-value= 1.000000
  :::::::::::::::::::::::::::::::::::::::::
   The 9 p-values were
        .063949   .605931   .320984   .199207   .817715
        .373662   .241180   .234569  1.000000
  A KSTEST for the 9 p-values yields  .997186

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::     
     ::            THE OVERLAPPING 5-PERMUTATION TEST                 ::     
     :: This is the OPERM5 test.  It looks at a sequence of one mill- ::     
     :: ion 32-bit random integers.  Each set of five consecutive     ::     
     :: integers can be in one of 120 states, for the 5! possible or- ::     
     :: derings of five numbers.  Thus the 5th, 6th, 7th,...numbers   ::     
     :: each provide a state. As many thousands of state transitions  ::     
     :: are observed,  cumulative counts are made of the number of    ::     
     :: occurences of each state.  Then the quadratic form in the     ::     
     :: weak inverse of the 120x120 covariance matrix yields a test   ::     
     :: equivalent to the likelihood ratio test that the 120 cell     ::     
     :: counts came from the specified (asymptotically) normal dis-   ::     
     :: tribution with the specified 120x120 covariance matrix (with  ::     
     :: rank 99).  This version uses 1,000,000 integers, twice.       ::     
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::     
           OPERM5 test for file MRG6gen.bin    
     For a sample of 1,000,000 consecutive 5-tuples,
 chisquare for 99 degrees of freedom= 93.008; p-value= .349257
           OPERM5 test for file MRG6gen.bin    
     For a sample of 1,000,000 consecutive 5-tuples,
 chisquare for 99 degrees of freedom= 88.947; p-value= .244249
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::     
     :: This is the BINARY RANK TEST for 31x31 matrices. The leftmost ::     
     :: 31 bits of 31 random integers from the test sequence are used ::     
     :: to form a 31x31 binary matrix over the field {0,1}. The rank  ::     
     :: is determined. That rank can be from 0 to 31, but ranks< 28   ::     
     :: are rare, and their counts are pooled with those for rank 28. ::     
     :: Ranks are found for 40,000 such random matrices and a chisqua-::     
     :: re test is performed on counts for ranks 31,30,29 and <=28.   ::     
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::     
    Binary rank test for MRG6gen.bin    
         Rank test for 31x31 binary matrices:
        rows from leftmost 31 bits of each 32-bit integer
      rank   observed  expected (o-e)^2/e  sum
        28       228     211.4  1.300562    1.301
        29      5110    5134.0   .112289    1.413
        30     23022   23103.0   .284317    1.697
        31     11640   11551.5   .677653    2.375
  chisquare= 2.375 for 3 d. of f.; p-value= .563314
--------------------------------------------------------------
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::     
     :: This is the BINARY RANK TEST for 32x32 matrices. A random 32x ::     
     :: 32 binary matrix is formed, each row a 32-bit random integer. ::     
     :: The rank is determined. That rank can be from 0 to 32, ranks  ::     
     :: less than 29 are rare, and their counts are pooled with those ::     
     :: for rank 29.  Ranks are found for 40,000 such random matrices ::     
     :: and a chisquare test is performed on counts for ranks  32,31, ::     
     :: 30 and <=29.                                                  ::     
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::     
    Binary rank test for MRG6gen.bin    
         Rank test for 32x32 binary matrices:
        rows from leftmost 32 bits of each 32-bit integer
      rank   observed  expected (o-e)^2/e  sum
        29      1494     211.4********** 7780.873
        30     15486    5134.0**********28654.166
        31     23020   23103.0   .29852328654.465
        32         0   11551.5**********40205.988
  chisquare=****** for 3 d. of f.; p-value=1.000000
--------------------------------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::     
     :: This is the BINARY RANK TEST for 6x8 matrices.  From each of  ::     
     :: six random 32-bit integers from the generator under test, a   ::     
     :: specified byte is chosen, and the resulting six bytes form a  ::     
     :: 6x8 binary matrix whose rank is determined.  That rank can be ::     
     :: from 0 to 6, but ranks 0,1,2,3 are rare; their counts are     ::     
     :: pooled with those for rank 4. Ranks are found for 100,000     ::     
     :: random matrices, and a chi-square test is performed on        ::     
     :: counts for ranks 6,5 and <=4.                                 ::     
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::     
         Binary Rank Test for MRG6gen.bin    
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG MRG6gen.bin    
     b-rank test for bits  1 to  8
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          920       944.3        .625        .625
          r =5        21670     21743.9        .251        .877
          r =6        77410     77311.8        .125       1.001
                        p=1-exp(-SUM/2)= .39385
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG MRG6gen.bin    
     b-rank test for bits  2 to  9
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          919       944.3        .678        .678
          r =5        21771     21743.9        .034        .712
          r =6        77310     77311.8        .000        .712
                        p=1-exp(-SUM/2)= .29943
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG MRG6gen.bin    
     b-rank test for bits  3 to 10
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          985       944.3       1.754       1.754
          r =5        21813     21743.9        .220       1.974
          r =6        77202     77311.8        .156       2.130
                        p=1-exp(-SUM/2)= .65521
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG MRG6gen.bin    
     b-rank test for bits  4 to 11
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          926       944.3        .355        .355
          r =5        21973     21743.9       2.414       2.769
          r =6        77101     77311.8        .575       3.343
                        p=1-exp(-SUM/2)= .81207
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG MRG6gen.bin    
     b-rank test for bits  5 to 12
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          936       944.3        .073        .073
          r =5        21745     21743.9        .000        .073
          r =6        77319     77311.8        .001        .074
                        p=1-exp(-SUM/2)= .03618
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG MRG6gen.bin    
     b-rank test for bits  6 to 13
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          923       944.3        .481        .481
          r =5        21791     21743.9        .102        .583
          r =6        77286     77311.8        .009        .591
                        p=1-exp(-SUM/2)= .25589
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG MRG6gen.bin    
     b-rank test for bits  7 to 14
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          964       944.3        .411        .411
          r =5        21570     21743.9       1.391       1.802
          r =6        77466     77311.8        .308       2.109
                        p=1-exp(-SUM/2)= .65168
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG MRG6gen.bin    
     b-rank test for bits  8 to 15
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          981       944.3       1.426       1.426
          r =5        21613     21743.9        .788       2.214
          r =6        77406     77311.8        .115       2.329
                        p=1-exp(-SUM/2)= .68793
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG MRG6gen.bin    
     b-rank test for bits  9 to 16
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          967       944.3        .546        .546
          r =5        21883     21743.9        .890       1.435
          r =6        77150     77311.8        .339       1.774
                        p=1-exp(-SUM/2)= .58813
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG MRG6gen.bin    
     b-rank test for bits 10 to 17
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4         1006       944.3       4.031       4.031
          r =5        21896     21743.9       1.064       5.095
          r =6        77098     77311.8        .591       5.686
                        p=1-exp(-SUM/2)= .94176
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG MRG6gen.bin    
     b-rank test for bits 11 to 18
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          909       944.3       1.320       1.320
          r =5        21950     21743.9       1.954       3.273
          r =6        77141     77311.8        .377       3.651
                        p=1-exp(-SUM/2)= .83883
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG MRG6gen.bin    
     b-rank test for bits 12 to 19
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          940       944.3        .020        .020
          r =5        21729     21743.9        .010        .030
          r =6        77331     77311.8        .005        .035
                        p=1-exp(-SUM/2)= .01714
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG MRG6gen.bin    
     b-rank test for bits 13 to 20
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4         1019       944.3       5.909       5.909
          r =5        21745     21743.9        .000       5.909
          r =6        77236     77311.8        .074       5.983
                        p=1-exp(-SUM/2)= .94980
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG MRG6gen.bin    
     b-rank test for bits 14 to 21
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          948       944.3        .014        .014
          r =5        21690     21743.9        .134        .148
          r =6        77362     77311.8        .033        .181
                        p=1-exp(-SUM/2)= .08638
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG MRG6gen.bin    
     b-rank test for bits 15 to 22
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          957       944.3        .171        .171
          r =5        21815     21743.9        .232        .403
          r =6        77228     77311.8        .091        .494
                        p=1-exp(-SUM/2)= .21890
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG MRG6gen.bin    
     b-rank test for bits 16 to 23
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          908       944.3       1.396       1.396
          r =5        21691     21743.9        .129       1.524
          r =6        77401     77311.8        .103       1.627
                        p=1-exp(-SUM/2)= .55672
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG MRG6gen.bin    
     b-rank test for bits 17 to 24
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          941       944.3        .012        .012
          r =5        21623     21743.9        .672        .684
          r =6        77436     77311.8        .200        .883
                        p=1-exp(-SUM/2)= .35702
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG MRG6gen.bin    
     b-rank test for bits 18 to 25
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          863       944.3       7.000       7.000
          r =5        21838     21743.9        .407       7.407
          r =6        77299     77311.8        .002       7.409
                        p=1-exp(-SUM/2)= .97539
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG MRG6gen.bin    
     b-rank test for bits 19 to 26
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          886       944.3       3.600       3.600
          r =5        21893     21743.9       1.022       4.622
          r =6        77221     77311.8        .107       4.729
                        p=1-exp(-SUM/2)= .90598
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG MRG6gen.bin    
     b-rank test for bits 20 to 27
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          906       944.3       1.554       1.554
          r =5        21902     21743.9       1.150       2.703
          r =6        77192     77311.8        .186       2.889
                        p=1-exp(-SUM/2)= .76410
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG MRG6gen.bin    
     b-rank test for bits 21 to 28
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          888       944.3       3.357       3.357
          r =5        21842     21743.9        .443       3.799
          r =6        77270     77311.8        .023       3.822
                        p=1-exp(-SUM/2)= .85207
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG MRG6gen.bin    
     b-rank test for bits 22 to 29
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          911       944.3       1.174       1.174
          r =5        21874     21743.9        .778       1.953
          r =6        77215     77311.8        .121       2.074
                        p=1-exp(-SUM/2)= .64549
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG MRG6gen.bin    
     b-rank test for bits 23 to 30
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          926       944.3        .355        .355
          r =5        21789     21743.9        .094        .448
          r =6        77285     77311.8        .009        .458
                        p=1-exp(-SUM/2)= .20448
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG MRG6gen.bin    
     b-rank test for bits 24 to 31
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          932       944.3        .160        .160
          r =5        22013     21743.9       3.330       3.491
          r =6        77055     77311.8        .853       4.344
                        p=1-exp(-SUM/2)= .88603
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG MRG6gen.bin    
     b-rank test for bits 25 to 32
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4         3581       944.3    7362.248    7362.248
          r =5        38203     21743.9   12458.757   19821.004
          r =6        58216     77311.8    4716.612   24537.615
                        p=1-exp(-SUM/2)=1.00000
   TEST SUMMARY, 25 tests on 100,000 random 6x8 matrices
 These should be 25 uniform [0,1] random variables:
     .393854     .299433     .655209     .812068     .036180
     .255894     .651679     .687927     .588132     .941764
     .838827     .017136     .949798     .086384     .218898
     .556722     .357019     .975389     .905983     .764102
     .852067     .645487     .204484     .886028    1.000000
   brank test summary for MRG6gen.bin    
       The KS test for those 25 supposed UNI's yields
                    KS p-value= .971587

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::     
     ::                   THE BITSTREAM TEST                          ::     
     :: The file under test is viewed as a stream of bits. Call them  ::     
     :: b1,b2,... .  Consider an alphabet with two "letters", 0 and 1 ::     
     :: and think of the stream of bits as a succession of 20-letter  ::     
     :: "words", overlapping.  Thus the first word is b1b2...b20, the ::     
     :: second is b2b3...b21, and so on.  The bitstream test counts   ::     
     :: the number of missing 20-letter (20-bit) words in a string of ::     
     :: 2^21 overlapping 20-letter words.  There are 2^20 possible 20 ::     
     :: letter words.  For a truly random string of 2^21+19 bits, the ::     
     :: number of missing words j should be (very close to) normally  ::     
     :: distributed with mean 141,909 and sigma 428.  Thus            ::     
     ::  (j-141909)/428 should be a standard normal variate (z score) ::     
     :: that leads to a uniform [0,1) p value.  The test is repeated  ::     
     :: twenty times.                                                 ::     
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::     
       THE OVERLAPPING 20-tuples BITSTREAM TEST,
            20 BITS PER WORD, 2^21 words.
    This test samples the bitstream 20 times.
  No. missing words should average  141909. with sigma=428.
-----------------------------------        ---------------
 tst no  1:  147984 missing words,   14.19 sigmas from mean, p-value=1.00000
 tst no  2:  147244 missing words,   12.46 sigmas from mean, p-value=1.00000
 tst no  3:  147053 missing words,   12.02 sigmas from mean, p-value=1.00000
 tst no  4:  147759 missing words,   13.67 sigmas from mean, p-value=1.00000
 tst no  5:  147800 missing words,   13.76 sigmas from mean, p-value=1.00000
 tst no  6:  147896 missing words,   13.99 sigmas from mean, p-value=1.00000
 tst no  7:  148611 missing words,   15.66 sigmas from mean, p-value=1.00000
 tst no  8:  147710 missing words,   13.55 sigmas from mean, p-value=1.00000
 tst no  9:  147352 missing words,   12.72 sigmas from mean, p-value=1.00000
 tst no 10:  147738 missing words,   13.62 sigmas from mean, p-value=1.00000
 tst no 11:  147999 missing words,   14.23 sigmas from mean, p-value=1.00000
 tst no 12:  147696 missing words,   13.52 sigmas from mean, p-value=1.00000
 tst no 13:  147804 missing words,   13.77 sigmas from mean, p-value=1.00000
 tst no 14:  148351 missing words,   15.05 sigmas from mean, p-value=1.00000
 tst no 15:  147628 missing words,   13.36 sigmas from mean, p-value=1.00000
 tst no 16:  147299 missing words,   12.59 sigmas from mean, p-value=1.00000
 tst no 17:  147340 missing words,   12.69 sigmas from mean, p-value=1.00000
 tst no 18:  147251 missing words,   12.48 sigmas from mean, p-value=1.00000
 tst no 19:  147279 missing words,   12.55 sigmas from mean, p-value=1.00000
 tst no 20:  146968 missing words,   11.82 sigmas from mean, p-value=1.00000

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::     
     ::             The tests OPSO, OQSO and DNA                      ::     
     ::         OPSO means Overlapping-Pairs-Sparse-Occupancy         ::     
     :: The OPSO test considers 2-letter words from an alphabet of    ::     
     :: 1024 letters.  Each letter is determined by a specified ten   ::     
     :: bits from a 32-bit integer in the sequence to be tested. OPSO ::     
     :: generates  2^21 (overlapping) 2-letter words  (from 2^21+1    ::     
     :: "keystrokes")  and counts the number of missing words---that  ::     
     :: is 2-letter words which do not appear in the entire sequence. ::     
     :: That count should be very close to normally distributed with  ::     
     :: mean 141,909, sigma 290. Thus (missingwrds-141909)/290 should ::     
     :: be a standard normal variable. The OPSO test takes 32 bits at ::     
     :: a time from the test file and uses a designated set of ten    ::     
     :: consecutive bits. It then restarts the file for the next de-  ::     
     :: signated 10 bits, and so on.                                  ::     
     ::                                                               ::     
     ::     OQSO means Overlapping-Quadruples-Sparse-Occupancy        ::     
     ::   The test OQSO is similar, except that it considers 4-letter ::     
     :: words from an alphabet of 32 letters, each letter determined  ::     
     :: by a designated string of 5 consecutive bits from the test    ::     
     :: file, elements of which are assumed 32-bit random integers.   ::     
     :: The mean number of missing words in a sequence of 2^21 four-  ::     
     :: letter words,  (2^21+3 "keystrokes"), is again 141909, with   ::     
     :: sigma = 295.  The mean is based on theory; sigma comes from   ::     
     :: extensive simulation.                                         ::     
     ::                                                               ::     
     ::    The DNA test considers an alphabet of 4 letters::  C,G,A,T,::     
     :: determined by two designated bits in the sequence of random   ::     
     :: integers being tested.  It considers 10-letter words, so that ::     
     :: as in OPSO and OQSO, there are 2^20 possible words, and the   ::     
     :: mean number of missing words from a string of 2^21  (over-    ::     
     :: lapping)  10-letter  words (2^21+9 "keystrokes") is 141909.   ::     
     :: The standard deviation sigma=339 was determined as for OQSO   ::     
     :: by simulation.  (Sigma for OPSO, 290, is the true value (to   ::     
     :: three places), not determined by simulation.                  ::     
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::     
 OPSO test for generator MRG6gen.bin              
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
    OPSO for MRG6gen.bin     using bits 23 to 32        786519******* 1.0000
    OPSO for MRG6gen.bin     using bits 22 to 31        141734  -.605  .2727
    OPSO for MRG6gen.bin     using bits 21 to 30        141782  -.439  .3303
    OPSO for MRG6gen.bin     using bits 20 to 29        141376 -1.839  .0330
    OPSO for MRG6gen.bin     using bits 19 to 28        141969   .206  .5815
    OPSO for MRG6gen.bin     using bits 18 to 27        142482  1.975  .9759
    OPSO for MRG6gen.bin     using bits 17 to 26        141694  -.743  .2289
    OPSO for MRG6gen.bin     using bits 16 to 25        141961   .178  .5707
    OPSO for MRG6gen.bin     using bits 15 to 24        142088   .616  .7311
    OPSO for MRG6gen.bin     using bits 14 to 23        141925   .054  .5215
    OPSO for MRG6gen.bin     using bits 13 to 22        142211  1.040  .8509
    OPSO for MRG6gen.bin     using bits 12 to 21        141757  -.525  .2997
    OPSO for MRG6gen.bin     using bits 11 to 20        141699  -.725  .2341
    OPSO for MRG6gen.bin     using bits 10 to 19        141744  -.570  .2843
    OPSO for MRG6gen.bin     using bits  9 to 18        141665  -.843  .1998
    OPSO for MRG6gen.bin     using bits  8 to 17        142129   .757  .7756
    OPSO for MRG6gen.bin     using bits  7 to 16        141975   .226  .5896
    OPSO for MRG6gen.bin     using bits  6 to 15        141777  -.456  .3241
    OPSO for MRG6gen.bin     using bits  5 to 14        141460 -1.549  .0606
    OPSO for MRG6gen.bin     using bits  4 to 13        141516 -1.356  .0875
    OPSO for MRG6gen.bin     using bits  3 to 12        141969   .206  .5815
    OPSO for MRG6gen.bin     using bits  2 to 11        141838  -.246  .4029
    OPSO for MRG6gen.bin     using bits  1 to 10        141699  -.725  .2341
 OQSO test for generator MRG6gen.bin              
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
    OQSO for MRG6gen.bin     using bits 28 to 32        983040******* 1.0000
    OQSO for MRG6gen.bin     using bits 27 to 31        141857  -.177  .4296
    OQSO for MRG6gen.bin     using bits 26 to 30        142147   .806  .7898
    OQSO for MRG6gen.bin     using bits 25 to 29        141847  -.211  .4163
    OQSO for MRG6gen.bin     using bits 24 to 28        141951   .141  .5562
    OQSO for MRG6gen.bin     using bits 23 to 27        142211  1.023  .8468
    OQSO for MRG6gen.bin     using bits 22 to 26        141864  -.154  .4389
    OQSO for MRG6gen.bin     using bits 21 to 25        141622  -.974  .1650
    OQSO for MRG6gen.bin     using bits 20 to 24        141782  -.432  .3330
    OQSO for MRG6gen.bin     using bits 19 to 23        142047   .467  .6796
    OQSO for MRG6gen.bin     using bits 18 to 22        142393  1.640  .9495
    OQSO for MRG6gen.bin     using bits 17 to 21        142246  1.141  .8731
    OQSO for MRG6gen.bin     using bits 16 to 20        141772  -.466  .3208
    OQSO for MRG6gen.bin     using bits 15 to 19        142187   .941  .8267
    OQSO for MRG6gen.bin     using bits 14 to 18        141680  -.777  .2185
    OQSO for MRG6gen.bin     using bits 13 to 17        141562 -1.177  .1195
    OQSO for MRG6gen.bin     using bits 12 to 16        141978   .233  .5920
    OQSO for MRG6gen.bin     using bits 11 to 15        141797  -.381  .3517
    OQSO for MRG6gen.bin     using bits 10 to 14        142334  1.440  .9250
    OQSO for MRG6gen.bin     using bits  9 to 13        142051   .480  .6845
    OQSO for MRG6gen.bin     using bits  8 to 12        142218  1.046  .8523
    OQSO for MRG6gen.bin     using bits  7 to 11        141602 -1.042  .1488
    OQSO for MRG6gen.bin     using bits  6 to 10        141964   .185  .5735
    OQSO for MRG6gen.bin     using bits  5 to  9        141669  -.815  .2076
    OQSO for MRG6gen.bin     using bits  4 to  8        141892  -.059  .4766
    OQSO for MRG6gen.bin     using bits  3 to  7        141772  -.466  .3208
    OQSO for MRG6gen.bin     using bits  2 to  6        142024   .389  .6513
    OQSO for MRG6gen.bin     using bits  1 to  5        141454 -1.543  .0614
  DNA test for generator MRG6gen.bin              
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
     DNA for MRG6gen.bin     using bits 31 to 32       1047552******* 1.0000
     DNA for MRG6gen.bin     using bits 30 to 31        142094   .545  .7070
     DNA for MRG6gen.bin     using bits 29 to 30        141622  -.848  .1983
     DNA for MRG6gen.bin     using bits 28 to 29        141709  -.591  .2773
     DNA for MRG6gen.bin     using bits 27 to 28        141724  -.547  .2923
     DNA for MRG6gen.bin     using bits 26 to 27        141801  -.320  .3747
     DNA for MRG6gen.bin     using bits 25 to 26        141279 -1.859  .0315
     DNA for MRG6gen.bin     using bits 24 to 25        141914   .014  .5055
     DNA for MRG6gen.bin     using bits 23 to 24        141887  -.066  .4737
     DNA for MRG6gen.bin     using bits 22 to 23        141457 -1.334  .0911
     DNA for MRG6gen.bin     using bits 21 to 22        141410 -1.473  .0704
     DNA for MRG6gen.bin     using bits 20 to 21        141824  -.252  .4006
     DNA for MRG6gen.bin     using bits 19 to 20        141970   .179  .5710
     DNA for MRG6gen.bin     using bits 18 to 19        141633  -.815  .2075
     DNA for MRG6gen.bin     using bits 17 to 18        141793  -.343  .3657
     DNA for MRG6gen.bin     using bits 16 to 17        141237 -1.983  .0237
     DNA for MRG6gen.bin     using bits 15 to 16        141957   .141  .5559
     DNA for MRG6gen.bin     using bits 14 to 15        142079   .501  .6916
     DNA for MRG6gen.bin     using bits 13 to 14        142085   .518  .6978
     DNA for MRG6gen.bin     using bits 12 to 13        142429  1.533  .9374
     DNA for MRG6gen.bin     using bits 11 to 12        141973   .188  .5745
     DNA for MRG6gen.bin     using bits 10 to 11        142059   .442  .6706
     DNA for MRG6gen.bin     using bits  9 to 10        142597  2.029  .9787
     DNA for MRG6gen.bin     using bits  8 to  9        141871  -.113  .4550
     DNA for MRG6gen.bin     using bits  7 to  8        141559 -1.033  .1507
     DNA for MRG6gen.bin     using bits  6 to  7        141909  -.001  .4996
     DNA for MRG6gen.bin     using bits  5 to  6        141889  -.060  .4761
     DNA for MRG6gen.bin     using bits  4 to  5        141727  -.538  .2953
     DNA for MRG6gen.bin     using bits  3 to  4        142247   .996  .8404
     DNA for MRG6gen.bin     using bits  2 to  3        141741  -.497  .3098
     DNA for MRG6gen.bin     using bits  1 to  2        142665  2.229  .9871

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::     
     ::     This is the COUNT-THE-1's TEST on a stream of bytes.      ::     
     :: Consider the file under test as a stream of bytes (four per   ::     
     :: 32 bit integer).  Each byte can contain from 0 to 8 1's,      ::     
     :: with probabilities 1,8,28,56,70,56,28,8,1 over 256.  Now let  ::     
     :: the stream of bytes provide a string of overlapping  5-letter ::     
     :: words, each "letter" taking values A,B,C,D,E. The letters are ::     
     :: determined by the number of 1's in a byte::  0,1,or 2 yield A,::     
     :: 3 yields B, 4 yields C, 5 yields D and 6,7 or 8 yield E. Thus ::     
     :: we have a monkey at a typewriter hitting five keys with vari- ::     
     :: ous probabilities (37,56,70,56,37 over 256).  There are 5^5   ::     
     :: possible 5-letter words, and from a string of 256,000 (over-  ::     
     :: lapping) 5-letter words, counts are made on the frequencies   ::     
     :: for each word.   The quadratic form in the weak inverse of    ::     
     :: the covariance matrix of the cell counts provides a chisquare ::     
     :: test::  Q5-Q4, the difference of the naive Pearson sums of    ::     
     :: (OBS-EXP)^2/EXP on counts for 5- and 4-letter cell counts.    ::     
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::     
   Test results for MRG6gen.bin    
 Chi-square with 5^5-5^4=2500 d.of f. for sample size:2560000
                               chisquare  equiv normal  p-value
  Results fo COUNT-THE-1's in successive bytes:
 byte stream for MRG6gen.bin     24210.15    307.028     1.000000
 byte stream for MRG6gen.bin     23917.21    302.885     1.000000

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::     
     ::     This is the COUNT-THE-1's TEST for specific bytes.        ::     
     :: Consider the file under test as a stream of 32-bit integers.  ::     
     :: From each integer, a specific byte is chosen , say the left-  ::     
     :: most::  bits 1 to 8. Each byte can contain from 0 to 8 1's,   ::     
     :: with probabilitie 1,8,28,56,70,56,28,8,1 over 256.  Now let   ::     
     :: the specified bytes from successive integers provide a string ::     
     :: of (overlapping) 5-letter words, each "letter" taking values  ::     
     :: A,B,C,D,E. The letters are determined  by the number of 1's,  ::     
     :: in that byte::  0,1,or 2 ---> A, 3 ---> B, 4 ---> C, 5 ---> D,::     
     :: and  6,7 or 8 ---> E.  Thus we have a monkey at a typewriter  ::     
     :: hitting five keys with with various probabilities::  37,56,70,::     
     :: 56,37 over 256. There are 5^5 possible 5-letter words, and    ::     
     :: from a string of 256,000 (overlapping) 5-letter words, counts ::     
     :: are made on the frequencies for each word. The quadratic form ::     
     :: in the weak inverse of the covariance matrix of the cell      ::     
     :: counts provides a chisquare test::  Q5-Q4, the difference of  ::     
     :: the naive Pearson  sums of (OBS-EXP)^2/EXP on counts for 5-   ::     
     :: and 4-letter cell counts.                                     ::     
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::     
 Chi-square with 5^5-5^4=2500 d.of f. for sample size: 256000
                      chisquare  equiv normal  p value
  Results for COUNT-THE-1's in specified bytes:
           bits  1 to  8  2421.34     -1.112      .132972
           bits  2 to  9  2472.92      -.383      .350848
           bits  3 to 10  2428.79     -1.007      .156957
           bits  4 to 11  2363.12     -1.936      .026447
           bits  5 to 12  2525.98       .367      .643337
           bits  6 to 13  2505.59       .079      .531499
           bits  7 to 14  2551.33       .726      .766069
           bits  8 to 15  2507.72       .109      .543454
           bits  9 to 16  2526.29       .372      .644970
           bits 10 to 17  2522.98       .325      .627386
           bits 11 to 18  2456.47      -.616      .269082
           bits 12 to 19  2589.15      1.261      .896308
           bits 13 to 20  2428.66     -1.009      .156515
           bits 14 to 21  2488.35      -.165      .434590
           bits 15 to 22  2607.25      1.517      .935337
           bits 16 to 23  2470.65      -.415      .339049
           bits 17 to 24  2476.88      -.327      .371860
           bits 18 to 25  2598.18      1.389      .917511
           bits 19 to 26  2423.23     -1.086      .138820
           bits 20 to 27  2635.00      1.909      .971883
           bits 21 to 28  2519.87       .281      .610667
           bits 22 to 29  2417.98     -1.160      .123051
           bits 23 to 30  2514.69       .208      .582306
           bits 24 to 31  2371.58     -1.816      .034676
           bits 25 to 32 50280.92    675.724     1.000000

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::     
     ::               THIS IS A PARKING LOT TEST                      ::     
     :: In a square of side 100, randomly "park" a car---a circle of  ::     
     :: radius 1.   Then try to park a 2nd, a 3rd, and so on, each    ::     
     :: time parking "by ear".  That is, if an attempt to park a car  ::     
     :: causes a crash with one already parked, try again at a new    ::     
     :: random location. (To avoid path problems, consider parking    ::     
     :: helicopters rather than cars.)   Each attempt leads to either ::     
     :: a crash or a success, the latter followed by an increment to  ::     
     :: the list of cars already parked. If we plot n:  the number of ::     
     :: attempts, versus k::  the number successfully parked, we get a::     
     :: curve that should be similar to those provided by a perfect   ::     
     :: random number generator.  Theory for the behavior of such a   ::     
     :: random curve seems beyond reach, and as graphics displays are ::     
     :: not available for this battery of tests, a simple characteriz ::     
     :: ation of the random experiment is used: k, the number of cars ::     
     :: successfully parked after n=12,000 attempts. Simulation shows ::     
     :: that k should average 3523 with sigma 21.9 and is very close  ::     
     :: to normally distributed.  Thus (k-3523)/21.9 should be a st-  ::     
     :: andard normal variable, which, converted to a uniform varia-  ::     
     :: ble, provides input to a KSTEST based on a sample of 10.      ::     
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::     
           CDPARK: result of ten tests on file MRG6gen.bin    
            Of 12,000 tries, the average no. of successes
                 should be 3523 with sigma=21.9
            Successes: 3518    z-score:  -.228 p-value: .409702
            Successes: 3513    z-score:  -.457 p-value: .323972
            Successes: 3499    z-score: -1.096 p-value: .136563
            Successes: 3505    z-score:  -.822 p-value: .205562
            Successes: 3518    z-score:  -.228 p-value: .409702
            Successes: 3484    z-score: -1.781 p-value: .037471
            Successes: 3523    z-score:   .000 p-value: .500000
            Successes: 3534    z-score:   .502 p-value: .692266
            Successes: 3524    z-score:   .046 p-value: .518210
            Successes: 3515    z-score:  -.365 p-value: .357445

           square size   avg. no.  parked   sample sigma
             100.            3513.300       13.460
            KSTEST for the above 10: p=  .849693

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::     
     ::               THE MINIMUM DISTANCE TEST                       ::     
     :: It does this 100 times::   choose n=8000 random points in a   ::     
     :: square of side 10000.  Find d, the minimum distance between   ::     
     :: the (n^2-n)/2 pairs of points.  If the points are truly inde- ::     
     :: pendent uniform, then d^2, the square of the minimum distance ::     
     :: should be (very close to) exponentially distributed with mean ::     
     :: .995 .  Thus 1-exp(-d^2/.995) should be uniform on [0,1) and  ::     
     :: a KSTEST on the resulting 100 values serves as a test of uni- ::     
     :: formity for random points in the square. Test numbers=0 mod 5 ::     
     :: are printed but the KSTEST is based on the full set of 100    ::     
     :: random choices of 8000 points in the 10000x10000 square.      ::     
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::     
               This is the MINIMUM DISTANCE test
              for random integers in the file MRG6gen.bin    
     Sample no.    d^2     avg     equiv uni            
           5     .1317    .3547     .123990
          10     .7105    .9580     .510341
          15     .2155    .8600     .194747
          20    1.1187    .9014     .675142
          25    2.6459   1.1163     .929995
          30     .5763   1.0839     .439659
          35     .8664   1.0994     .581382
          40     .9029   1.0916     .596434
          45     .9737   1.0451     .624164
          50     .9362   1.0424     .609711
          55     .2721   1.0888     .239295
          60    1.3488   1.1452     .742207
          65    1.4689   1.1769     .771513
          70     .9338   1.1655     .608801
          75    1.5551   1.1180     .790469
          80    1.6581   1.1209     .811071
          85     .1431   1.0812     .133918
          90    2.6157   1.0851     .927835
          95     .0835   1.0719     .080527
         100     .1163   1.0560     .110297
     MINIMUM DISTANCE TEST for MRG6gen.bin    
          Result of KS test on 20 transformed mindist^2's:
                                  p-value= .834356

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ 

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::     
     ::              THE 3DSPHERES TEST                               ::     
     :: Choose  4000 random points in a cube of edge 1000.  At each   ::     
     :: point, center a sphere large enough to reach the next closest ::     
     :: point. Then the volume of the smallest such sphere is (very   ::     
     :: close to) exponentially distributed with mean 120pi/3.  Thus  ::     
     :: the radius cubed is exponential with mean 30. (The mean is    ::     
     :: obtained by extensive simulation).  The 3DSPHERES test gener- ::     
     :: ates 4000 such spheres 20 times.  Each min radius cubed leads ::     
     :: to a uniform variable by means of 1-exp(-r^3/30.), then a     ::     
     ::  KSTEST is done on the 20 p-values.                           ::     
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::     
               The 3DSPHERES test for file MRG6gen.bin    
 sample no:  1     r^3=  45.613     p-value= .78138
 sample no:  2     r^3=  16.480     p-value= .42267
 sample no:  3     r^3=  53.030     p-value= .82927
 sample no:  4     r^3=  37.759     p-value= .71596
 sample no:  5     r^3=  11.094     p-value= .30912
 sample no:  6     r^3=  13.693     p-value= .36646
 sample no:  7     r^3=  89.345     p-value= .94911
 sample no:  8     r^3=  26.177     p-value= .58213
 sample no:  9     r^3=  82.687     p-value= .93647
 sample no: 10     r^3=  65.807     p-value= .88848
 sample no: 11     r^3=  17.872     p-value= .44883
 sample no: 12     r^3=  62.910     p-value= .87718
 sample no: 13     r^3=  14.207     p-value= .37723
 sample no: 14     r^3=  72.743     p-value= .91150
 sample no: 15     r^3=    .941     p-value= .03090
 sample no: 16     r^3=  20.804     p-value= .50017
 sample no: 17     r^3=  13.696     p-value= .36653
 sample no: 18     r^3=  25.546     p-value= .57324
 sample no: 19     r^3=  20.935     p-value= .50234
 sample no: 20     r^3=  30.706     p-value= .64068
  A KS test is applied to those 20 p-values.
---------------------------------------------------------
       3DSPHERES test for file MRG6gen.bin          p-value= .842433
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::     
     ::      This is the SQEEZE test                                  ::     
     ::  Random integers are floated to get uniforms on [0,1). Start- ::     
     ::  ing with k=2^31=2147483647, the test finds j, the number of  ::     
     ::  iterations necessary to reduce k to 1, using the reduction   ::     
     ::  k=ceiling(k*U), with U provided by floating integers from    ::     
     ::  the file being tested.  Such j's are found 100,000 times,    ::     
     ::  then counts for the number of times j was <=6,7,...,47,>=48  ::     
     ::  are used to provide a chi-square test for cell frequencies.  ::     
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::     
            RESULTS OF SQUEEZE TEST FOR MRG6gen.bin    
         Table of standardized frequency counts
     ( (obs-exp)/sqrt(exp) )^2
        for j taking values <=6,7,8,...,47,>=48:
      .6     -.3      .8     -.7     -.5     1.1
      .3      .5      .0      .4      .1     -.1
      .9    -1.4    -2.0     1.3     -.4     -.4
     -.4      .4      .1     -.7     -.3     1.2
      .3      .6      .5     1.5     -.4      .2
      .4     -.5      .3      .3     -.1      .4
     -.5     -.7      .1      .4      .1    -1.0
      .8
           Chi-square with 42 degrees of freedom: 21.343
              z-score= -2.254  p-value= .003421
______________________________________________________________

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::     
     ::             The  OVERLAPPING SUMS test                        ::     
     :: Integers are floated to get a sequence U(1),U(2),... of uni-  ::     
     :: form [0,1) variables.  Then overlapping sums,                 ::     
     ::   S(1)=U(1)+...+U(100), S2=U(2)+...+U(101),... are formed.    ::     
     :: The S's are virtually normal with a certain covariance mat-   ::     
     :: rix.  A linear transformation of the S's converts them to a   ::     
     :: sequence of independent standard normals, which are converted ::     
     :: to uniform variables for a KSTEST. The  p-values from ten     ::     
     :: KSTESTs are given still another KSTEST.                       ::     
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::     
                Test no.  1      p-value  .597368
                Test no.  2      p-value  .980876
                Test no.  3      p-value  .561708
                Test no.  4      p-value  .377628
                Test no.  5      p-value  .910894
                Test no.  6      p-value  .708996
                Test no.  7      p-value  .316677
                Test no.  8      p-value  .828454
                Test no.  9      p-value  .379638
                Test no. 10      p-value  .275797
   Results of the OSUM test for MRG6gen.bin    
        KSTEST on the above 10 p-values:  .543213

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::     
     ::     This is the RUNS test.  It counts runs up, and runs down, ::     
     :: in a sequence of uniform [0,1) variables, obtained by float-  ::     
     :: ing the 32-bit integers in the specified file. This example   ::     
     :: shows how runs are counted:  .123,.357,.789,.425,.224,.416,.95::     
     :: contains an up-run of length 3, a down-run of length 2 and an ::     
     :: up-run of (at least) 2, depending on the next values.  The    ::     
     :: covariance matrices for the runs-up and runs-down are well    ::     
     :: known, leading to chisquare tests for quadratic forms in the  ::     
     :: weak inverses of the covariance matrices.  Runs are counted   ::     
     :: for sequences of length 10,000.  This is done ten times. Then ::     
     :: repeated.                                                     ::     
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::     
           The RUNS test for file MRG6gen.bin    
     Up and down runs in a sample of 10000
_________________________________________________ 
                 Run test for MRG6gen.bin    :
       runs up; ks test for 10 p's: .457794
     runs down; ks test for 10 p's: .813429
                 Run test for MRG6gen.bin    :
       runs up; ks test for 10 p's: .920181
     runs down; ks test for 10 p's: .386446

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::     
     :: This is the CRAPS TEST. It plays 200,000 games of craps, finds::     
     :: the number of wins and the number of throws necessary to end  ::     
     :: each game.  The number of wins should be (very close to) a    ::     
     :: normal with mean 200000p and variance 200000p(1-p), with      ::     
     :: p=244/495.  Throws necessary to complete the game can vary    ::     
     :: from 1 to infinity, but counts for all>21 are lumped with 21. ::     
     :: A chi-square test is made on the no.-of-throws cell counts.   ::     
     :: Each 32-bit integer from the test file provides the value for ::     
     :: the throw of a die, by floating to [0,1), multiplying by 6    ::     
     :: and taking 1 plus the integer part of the result.             ::     
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::     
                Results of craps test for MRG6gen.bin    
  No. of wins:  Observed Expected
                                98754    98585.86
                  98754= No. of wins, z-score=  .752 pvalue= .77398
   Analysis of Throws-per-Game:
 Chisq=  26.27 for 20 degrees of freedom, p=  .84283
               Throws Observed Expected  Chisq     Sum
                  1    66580    66666.7    .113     .113
                  2    37611    37654.3    .050     .163
                  3    27055    26954.7    .373     .536
                  4    19171    19313.5   1.051    1.586
                  5    13788    13851.4    .290    1.877
                  6     9815     9943.5   1.662    3.538
                  7     7315     7145.0   4.044    7.582
                  8     5110     5139.1    .164    7.746
                  9     3770     3699.9   1.330    9.076
                 10     2766     2666.3   3.728   12.804
                 11     1964     1923.3    .860   13.664
                 12     1362     1388.7    .515   14.179
                 13      946     1003.7   3.319   17.498
                 14      748      726.1    .658   18.156
                 15      546      525.8    .773   18.929
                 16      382      381.2    .002   18.931
                 17      273      276.5    .045   18.976
                 18      229      200.8   3.951   22.928
                 19      158      146.0    .989   23.917
                 20      100      106.2    .364   24.280
                 21      311      287.1   1.987   26.267
            SUMMARY  FOR MRG6gen.bin    
                p-value for no. of wins: .773981
                p-value for throws/game: .842835

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

 Results of DIEHARD battery of tests sent to file MRG6gen.all    
